!function(e){var r={};function s(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=r,s.d=function(t,n,e){s.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(n,t){if(1&t&&(n=s(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(s.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)s.d(e,r,function(t){return n[t]}.bind(null,r));return e},s.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(n,"a",n),n},s.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},s.p="",s(s.s="./src/client/js/app.js")}({"./lib/config.js":function(module,exports){eval('module.exports = {\r\n\tsessionKey: "RGcPyH2xAtBKokmPMIYEc2lHYQy7joC9",\r\n\tmaxPlayers: 100,\r\n\tmaxMessageHistory: 100,\r\n\tmaxWaves: 100,\r\n\tminWaves: 10,\r\n\twarnMessages: {\r\n\t\tblank: "— This field is required",\r\n\t\tshort: "— Too short",\r\n\t\tunmatchedPassword: "— Doesn\'t match",\r\n\t\tincorrectPassword: "— Incorrect password",\r\n\t\ttaken: "— Already taken",\r\n\t\tunknown: "— This doesn\'t exist"\r\n\t},\r\n\tmap: {\r\n\t\tsize: 1500,\r\n\t\twallWidth: 40,\r\n\t\tbackground: "#3a363d"\r\n\t},\r\n\tplayer: {\r\n\t\tzoom: 300,\r\n\t\tradius: 10,\r\n\t\tspeed: 2.6,\r\n\t\tacceleration: 0.2,\r\n\t\tcontrols: {\r\n\t\t\tmoveUp: 87,\r\n\t\t\tmoveRight: 65,\r\n\t\t\tmoveDown: 83,\r\n\t\t\tmoveLeft: 68\r\n\t\t},\r\n\t\tbody: {\r\n\t\t\trestitution: 0,\r\n\t\t\tdensity: 1.4,\r\n\t\t\tfriction: 0,\r\n\t\t\tfrictionAir: 0.8,\r\n\t\t\tfrictionStatic: 0,\r\n\t\t\tisStatic: false\r\n\t\t}\r\n\t},\r\n\tzombie: {\r\n\t\tfieldOfView: {\r\n\t\t\tangle: Math.PI * 1.5,\r\n\t\t\tdistance: 600\r\n\t\t},\r\n\t\tspeed: 0.3,\r\n\t\tradius: 10,\r\n\t\tbody: {\r\n\t\t\trestitution: 0,\r\n\t\t\tdensity: 0.5,\r\n\t\t\tfriction: 0,\r\n\t\t\tfrictionAir: 0.8,\r\n\t\t\tfrictionStatic: 0,\r\n\t\t\tisStatic: false\r\n\t\t}\r\n\t},\r\n\tbullet: {\r\n\t\tspeed: 6,\r\n\t\trange: 200,\r\n\t\tradius: 1\r\n\t},\r\n\tbarrier: {\r\n\t\tmin: {\r\n\t\t\twidth: 40,\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\tmax: {\r\n\t\t\twidth: 110,\r\n\t\t\theight: 110\r\n\t\t},\r\n\t\tbody: {\r\n\t\t\trestitution: 0,\r\n\t\t\tisStatic: true,\r\n\t\t\tangle: 0\r\n\t\t}\r\n\t}\r\n};\n\n//# sourceURL=webpack:///./lib/config.js?')},"./lib/key.js":function(module,exports){eval('class Key {\r\n\tconstructor() {\r\n\t\tthis.code = null;\r\n\t\tthis.name = null;\r\n\t\tthis.activeKeys = {};\r\n\t}\r\n\r\n\tcheck(code) {\r\n\t\tif (typeof code == "number") return code in this.activeKeys;\r\n\r\n\t\tlet values = Object.values(this.activeKeys);\r\n\t\treturn values.includes(code);\r\n\t}\r\n\r\n\ton(name, f) {\r\n\t\tif (typeof f != "function") return;\r\n\t\taddEventListener(name, f);\r\n\t}\r\n}\r\n\r\nconst key = new Key();\r\n\r\nkey.on("keydown", function (event) {\r\n\tkey.code = event.keyCode;\r\n\tkey.name = event.code;\r\n\r\n\tkey.activeKeys[key.code] = key.name;\r\n});\r\n\r\nkey.on("keyup", function (event) {\r\n\tkey.code = event.keyCode;\r\n\tkey.name = event.code;\r\n\r\n\tdelete key.activeKeys[key.code];\r\n});\r\n\r\nmodule.exports = key;\n\n//# sourceURL=webpack:///./lib/key.js?')},"./lib/mouse.js":function(module,exports){eval('class Mouse {\r\n\tconstructor() {\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.speedX = 0;\r\n\t\tthis.speedY = 0;\r\n\t\tthis.pressed = false;\r\n\t\tthis.dragged = false;\r\n\t\tthis.scrolled = false;\r\n\t\tthis.scrollTop = false;\r\n\t}\r\n\r\n\ton(name, f) {\r\n\t\tif (typeof f != "function") return;\r\n\t\taddEventListener(name, f);\r\n\t}\r\n}\r\n\r\nconst mouse = new Mouse();\r\n\r\nmouse.on("mousedown", function(event) {\r\n\tmouse.pressed = true;\r\n});\r\n\r\nmouse.on("mouseup", function(event) {\r\n\tmouse.pressed = false;\r\n});\r\n\r\nmouse.on("mousemove", function(event) {\r\n\tmouse.x = event.clientX;\r\n\tmouse.y = event.clientY;\r\n\r\n\tmouse.speedX = event.movementX;\r\n\tmouse.speedY = event.movementY;\r\n\r\n\tif (mouse.pressed) {\r\n\t\tmouse.dragged = true;\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\tmouse.dragged = false;\r\n\t\t}, 100);\r\n\t}\r\n});\r\n\r\nmouse.on("mousewheel", function(event) {\r\n\tmouse.scrolled = true;\r\n\r\n\tif (event.wheelDelta > 0) {\r\n\t\tmouse.scrollTop = true;\r\n\t} else {\r\n\t\tmouse.scrollTop = false;\r\n\t}\r\n\r\n\tsetTimeout(function() {\r\n\t\tmouse.scrolled = false;\r\n\t}, 100);\r\n});\r\n\r\nmodule.exports = mouse;\n\n//# sourceURL=webpack:///./lib/mouse.js?')},"./lib/shape.js":function(module,exports){eval("class Circle {\r\n\tconstructor(x, y, radius) {\r\n\t\tthis.position = {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\r\n\t\tthis.size = {\r\n\t\t\tx: 1,\r\n\t\t\ty: 1\r\n\t\t};\r\n\r\n\t\tthis.bounds = {};\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.angle = 0;\r\n\t\tthis.vertices = [];\r\n\t\tthis.sides = Math.ceil(Math.max(10, Math.min(24, this.radius)));\r\n\r\n\t\tthis.updateVertices();\r\n\t}\r\n\r\n\tupdateVertices(_sides) {\r\n\t\tlet sides = _sides || this.sides;\r\n\r\n\t\tthis.vertices = [];\r\n\t\tfor (var angle = -Math.PI; angle < Math.PI; angle += Math.PI * 2 / sides) {\r\n\t\t\tlet vertex = {\r\n\t\t\t\tx: this.position.x + Math.cos(angle) * this.radius,\r\n\t\t\t\ty: this.position.y + Math.sin(angle) * this.radius,\r\n\t\t\t\tangle: angle\r\n\t\t\t};\r\n\r\n\t\t\tthis.vertices.push(vertex);\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\tupdateBounds() {\r\n\t\tlet x = [];\r\n\t\tlet y = [];\r\n\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tx.push(vertex.x);\r\n\t\t\ty.push(vertex.y);\r\n\t\t}\r\n\r\n\t\tthis.bounds = {\r\n\t\t\tmin: {\r\n\t\t\t\tx: Math.min(...x),\r\n\t\t\t\ty: Math.min(...y)\r\n\t\t\t},\r\n\t\t\tmax: {\r\n\t\t\t\tx: Math.max(...x),\r\n\t\t\t\ty: Math.max(...y)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetRadius(radius) {\r\n\t\tif (radius == this.radius) return;\r\n\r\n\t\tthis.radius = radius;\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tvertex.x = this.position.x + Math.cos(vertex.angle + this.angle) * this.radius;\r\n\t\t\tvertex.y = this.position.y + Math.sin(vertex.angle + this.angle) * this.radius;\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\tscale(x, y) {\r\n\t\tif (x == this.size.x && y == this.size.y) return;\r\n\r\n\t\tlet sizeDelta = {\r\n\t\t\tx: x - this.size.x,\r\n\t\t\ty: y - this.size.y\r\n\t\t}\r\n\r\n\t\tthis.size.x = x;\r\n\t\tthis.size.y = y;\r\n\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tlet vertexDelta = {\r\n\t\t\t\tx: vertex.x - this.position.x,\r\n\t\t\t\ty: vertex.y - this.position.y\r\n\t\t\t};\r\n\r\n\t\t\tvertex.x = this.position.x + vertexDelta.x * (1 + sizeDelta.x);\r\n\t\t\tvertex.y = this.position.y + vertexDelta.y * (1 + sizeDelta.y);\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\ttranslate(x, y) {\r\n\t\tif (x == this.position.x && y == this.position.y) return;\r\n\r\n\t\tlet delta = {\r\n\t\t\tx: x - this.position.x,\r\n\t\t\ty: y - this.position.y\r\n\t\t};\r\n\r\n\t\tthis.position.x = x;\r\n\t\tthis.position.y = y;\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tvertex.x += delta.x;\r\n\t\t\tvertex.y += delta.y;\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\trotate(angle) {\r\n\t\tif (angle == this.angle) return;\r\n\r\n\t\tlet delta = angle - this.angle;\r\n\r\n\t\tthis.angle = angle;\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tlet x = (vertex.x - this.position.x) * Math.cos(delta) - (vertex.y - this.position.y) * Math.sin(delta);\r\n\t\t\tlet y = (vertex.x - this.position.x) * Math.sin(delta) + (vertex.y - this.position.y) * Math.cos(delta);\r\n\t\t\tvertex.x = this.position.x + x;\r\n\t\t\tvertex.y = this.position.y + y;\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n}\r\n\r\nclass Rectangle {\r\n\tconstructor(x, y, width, height) {\r\n\t\tthis.position = {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\r\n\t\tthis.size = {\r\n\t\t\tx: 1,\r\n\t\t\ty: 1\r\n\t\t};\r\n\r\n\t\tthis.bounds = {};\r\n\r\n\t\tthis.angle = 0;\r\n\t\tthis.vertices = [];\r\n\r\n\t\tthis.updateVertices(width, height);\r\n\t}\r\n\r\n\tupdateVertices(width, height) {\r\n\t\tthis.vertices = [{\r\n\t\t\tx: this.position.x - width * 0.5,\r\n\t\t\ty: this.position.y - height * 0.5\r\n\t\t}, {\r\n\t\t\tx: this.position.x + width * 0.5,\r\n\t\t\ty: this.position.y - height * 0.5\r\n\t\t}, {\r\n\t\t\tx: this.position.x + width * 0.5,\r\n\t\t\ty: this.position.y + height * 0.5\r\n\t\t}, {\r\n\t\t\tx: this.position.x - width * 0.5,\r\n\t\t\ty: this.position.y + height * 0.5\r\n\t\t}];\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\tupdateBounds() {\r\n\t\tlet x = [];\r\n\t\tlet y = [];\r\n\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tx.push(vertex.x);\r\n\t\t\ty.push(vertex.y);\r\n\t\t}\r\n\r\n\t\tthis.bounds = {\r\n\t\t\tmin: {\r\n\t\t\t\tx: Math.min(...x),\r\n\t\t\t\ty: Math.min(...y)\r\n\t\t\t},\r\n\t\t\tmax: {\r\n\t\t\t\tx: Math.max(...x),\r\n\t\t\t\ty: Math.max(...y)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tscale(x, y) {\r\n\t\tif (x == this.size.x && y == this.size.y) return;\r\n\r\n\t\tlet sizeDelta = {\r\n\t\t\tx: x - this.size.x,\r\n\t\t\ty: y - this.size.y\r\n\t\t}\r\n\r\n\t\tthis.size.x = x;\r\n\t\tthis.size.y = y;\r\n\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tlet vertexDelta = {\r\n\t\t\t\tx: vertex.x - this.position.x,\r\n\t\t\t\ty: vertex.y - this.position.y\r\n\t\t\t};\r\n\r\n\t\t\tvertex.x = this.position.x + vertexDelta.x * (1 + sizeDelta.x);\r\n\t\t\tvertex.y = this.position.y + vertexDelta.y * (1 + sizeDelta.y);\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\ttranslate(x, y) {\r\n\t\tif (x == this.position.x && y == this.position.y) return;\r\n\r\n\t\tlet delta = {\r\n\t\t\tx: x - this.position.x,\r\n\t\t\ty: y - this.position.y\r\n\t\t};\r\n\r\n\t\tthis.position.x = x;\r\n\t\tthis.position.y = y;\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tvertex.x += delta.x;\r\n\t\t\tvertex.y += delta.y;\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\trotate(angle) {\r\n\t\tif (angle == this.angle) return;\r\n\r\n\t\tlet delta = angle - this.angle;\r\n\r\n\t\tthis.angle = angle;\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tlet x = (vertex.x - this.position.x) * Math.cos(delta) - (vertex.y - this.position.y) * Math.sin(delta);\r\n\t\t\tlet y = (vertex.x - this.position.x) * Math.sin(delta) + (vertex.y - this.position.y) * Math.cos(delta);\r\n\t\t\tvertex.x = this.position.x + x;\r\n\t\t\tvertex.y = this.position.y + y;\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n}\r\n\r\nclass Polygon {\r\n\tconstructor(x, y, radius, sides) {\r\n\t\tthis.position = {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\r\n\t\tthis.size = {\r\n\t\t\tx: 1,\r\n\t\t\ty: 1\r\n\t\t};\r\n\r\n\t\tthis.bounds = {};\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.angle = 0;\r\n\t\tthis.vertices = [];\r\n\t\tthis.sides = sides;\r\n\r\n\t\tthis.updateVertices();\r\n\t}\r\n\r\n\tupdateVertices(sides) {\r\n\t\tthis.sides = sides ? sides : this.sides;\r\n\r\n\t\tthis.vertices = [];\r\n\t\tfor (var angle = -Math.PI; angle < Math.PI; angle += (Math.PI * 2) / this.sides) {\r\n\t\t\tlet vertex = {\r\n\t\t\t\tx: this.position.x + Math.cos(angle) * this.radius,\r\n\t\t\t\ty: this.position.y + Math.sin(angle) * this.radius,\r\n\t\t\t\tangle: angle\r\n\t\t\t};\r\n\r\n\t\t\tthis.vertices.push(vertex);\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\tupdateBounds() {\r\n\t\tlet x = [];\r\n\t\tlet y = [];\r\n\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tx.push(vertex.x);\r\n\t\t\ty.push(vertex.y);\r\n\t\t}\r\n\r\n\t\tthis.bounds = {\r\n\t\t\tmin: {\r\n\t\t\t\tx: Math.min(...x),\r\n\t\t\t\ty: Math.min(...y)\r\n\t\t\t},\r\n\t\t\tmax: {\r\n\t\t\t\tx: Math.max(...x),\r\n\t\t\t\ty: Math.max(...y)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetRadius(radius) {\r\n\t\tif (radius == this.radius) return;\r\n\r\n\t\tthis.radius = radius;\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tvertex.x = this.position.x + Math.cos(vertex.angle + this.angle) * this.radius;\r\n\t\t\tvertex.y = this.position.y + Math.sin(vertex.angle + this.angle) * this.radius;\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\tscale(x, y) {\r\n\t\tif (x == this.size.x && y == this.size.y) return;\r\n\r\n\t\tlet sizeDelta = {\r\n\t\t\tx: x - this.size.x,\r\n\t\t\ty: y - this.size.y\r\n\t\t}\r\n\r\n\t\tthis.size.x = x;\r\n\t\tthis.size.y = y;\r\n\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tlet vertexDelta = {\r\n\t\t\t\tx: vertex.x - this.position.x,\r\n\t\t\t\ty: vertex.y - this.position.y\r\n\t\t\t};\r\n\r\n\t\t\tvertex.x = this.position.x + vertexDelta.x * (1 + sizeDelta.x);\r\n\t\t\tvertex.y = this.position.y + vertexDelta.y * (1 + sizeDelta.y);\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\ttranslate(x, y) {\r\n\t\tif (x == this.position.x && y == this.position.y) return;\r\n\r\n\t\tlet delta = {\r\n\t\t\tx: x - this.position.x,\r\n\t\t\ty: y - this.position.y\r\n\t\t};\r\n\r\n\t\tthis.position.x = x;\r\n\t\tthis.position.y = y;\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tvertex.x += delta.x;\r\n\t\t\tvertex.y += delta.y;\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n\r\n\trotate(angle) {\r\n\t\tif (angle == this.angle) return;\r\n\r\n\t\tlet delta = angle - this.angle;\r\n\r\n\t\tthis.angle = angle;\r\n\t\tfor (var i = 0; i < this.vertices.length; i++) {\r\n\t\t\tlet vertex = this.vertices[i];\r\n\t\t\tlet x = (vertex.x - this.position.x) * Math.cos(delta) - (vertex.y - this.position.y) * Math.sin(delta);\r\n\t\t\tlet y = (vertex.x - this.position.x) * Math.sin(delta) + (vertex.y - this.position.y) * Math.cos(delta);\r\n\t\t\tvertex.x = this.position.x + x;\r\n\t\t\tvertex.y = this.position.y + y;\r\n\t\t}\r\n\r\n\t\tthis.updateBounds();\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcircle: function(x, y, radius) {\r\n\t\tx = x || 0;\r\n\t\ty = y || 0;\r\n\t\tradius = radius || 0;\r\n\r\n\t\treturn new Circle(x, y, radius)\r\n\t},\r\n\trect: function(x, y, width, height) {\r\n\t\tx = x || 0;\r\n\t\ty = y || 0;\r\n\t\twidth = width || 0;\r\n\t\theight = height || 0;\r\n\r\n\t\treturn new Rectangle(x, y, width, height);\r\n\t},\r\n\tpolygon: function(x, y, radius, sides) {\r\n\t\tx = x || 0;\r\n\t\ty = y || 0;\r\n\t\tradius = radius || 0;\r\n\t\tsides = sides || 0;\r\n\r\n\t\treturn new Polygon(x, y, radius, sides);\r\n\t},\r\n\tSAT: function(shapeA, shapeB) {\r\n\t\tconst getAxes = function(vertices) {\r\n\t\t\tlet axes = [];\r\n\t\t\tfor (var i = 0; i < vertices.length; i++) {\r\n\t\t\t\tlet currentVertex = vertices[i];\r\n\t\t\t\tlet nextVertex = vertices[i + 1 == vertices.length ? 0 : i + 1];\r\n\t\t\t\tlet axisNormal = {\r\n\t\t\t\t\tx: nextVertex.y - currentVertex.y,\r\n\t\t\t\t\ty: -(nextVertex.x - currentVertex.x)\r\n\t\t\t\t};\r\n\r\n\t\t\t\taxes.push(axisNormal);\r\n\t\t\t}\r\n\r\n\t\t\treturn axes;\r\n\t\t}\r\n\r\n\t\tconst getProjection = function(axis, vertices) {\r\n\t\t\tlet min = Infinity;\r\n\t\t\tlet max = -Infinity;\r\n\r\n\t\t\tfor (var i = 0; i < vertices.length; i++) {\r\n\t\t\t\tlet vertex = vertices[i];\r\n\t\t\t\tlet projection = axis.x * vertex.x + axis.y * vertex.y;\r\n\t\t\t\tmin = projection < min ? projection : min;\r\n\t\t\t\tmax = projection > max ? projection : max;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmin: min,\r\n\t\t\t\tmax: max\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst getResult = function(verticesA, verticesB) {\r\n\t\t\tlet axesA = getAxes(verticesA);\r\n\t\t\tlet axesB = getAxes(verticesB);\r\n\r\n\t\t\tfor (var i = 0; i < axesA.length; i++) {\r\n\t\t\t\tlet axis = axesA[i];\r\n\t\t\t\tlet projectionA = getProjection(axis, verticesA);\r\n\t\t\t\tlet projectionB = getProjection(axis, verticesB);\r\n\r\n\t\t\t\tif (!(projectionB.max >= projectionA.min && projectionA.max >= projectionB.min)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < axesB.length; i++) {\r\n\t\t\t\tlet axis = axesB[i];\r\n\t\t\t\tlet projectionA = getProjection(axis, verticesA);\r\n\t\t\t\tlet projectionB = getProjection(axis, verticesB);\r\n\r\n\t\t\t\tif (!(projectionB.max >= projectionA.min && projectionA.max >= projectionB.min)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn getResult(shapeA.vertices, shapeB.vertices);\r\n\t}\r\n};\n\n//# sourceURL=webpack:///./lib/shape.js?")},"./lib/utils.js":function(module,exports){eval('module.exports = {\r\n\tlerp: function(start, stop, weight) {\r\n\t\treturn weight * (stop - start) + start;\r\n\t},\r\n\tdist: function(x1, y1, x2, y2) {\r\n\t\treturn Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n\t},\r\n\tmap: function(n, start1, stop1, start2, stop2) {\r\n\t\treturn (n - start1) / (stop1 - start1) * (stop2 - start2) + start2;\r\n\t},\r\n\trandom: function() {\r\n\t\tif (arguments.length == 2 && typeof arguments[0] == "number" && typeof arguments[1] == "number") {\r\n\t\t\treturn Math.random() * (arguments[1] - arguments[0]) + arguments[0];\r\n\t\t} else if (arguments.length == 1 && typeof arguments[0] == "number") {\r\n\t\t\treturn Math.random() * arguments[0];\r\n\t\t} else if (Array.isArray(arguments[0])) {\r\n\t\t\treturn arguments[0][Math.floor(Math.random() * arguments[0].length)];\r\n\t\t} else if (arguments.length > 2) {\r\n\t\t\tlet args = [...arguments];\r\n\t\t\treturn args[Math.floor(Math.random() * args.length)];\r\n\t\t}\r\n\t},\r\n\tconstrain: function(n, min, max) {\r\n\t\treturn Math.max(Math.min(n, max), min);\r\n\t},\r\n\tgetRandomColor: function() {\r\n\t\treturn this.random([\r\n\t\t\t"#ff3b3b",\r\n\t\t\t"#ff763b",\r\n\t\t\t"#ffdb3b",\r\n\t\t\t"#c4ff3b",\r\n\t\t\t"#76ff3b",\r\n\t\t\t"#3bff8d",\r\n\t\t\t"#3bc1ff",\r\n\t\t\t"#3b48ff",\r\n\t\t\t"#963bff",\r\n\t\t\t"#de3bff",\r\n\t\t\t"#ff3b96"\r\n\t\t]);\r\n\t}\r\n};\n\n//# sourceURL=webpack:///./lib/utils.js?')},"./lib/vector.js":function(module,exports){eval('function random(min, max) {\r\n\treturn Math.random() * (max - min) + min;\r\n}\r\n\r\nclass Vector {\r\n\tconstructor() {\r\n\t\tlet x = typeof arguments[0] == "object" ? arguments[0].x : arguments[0];\r\n\t\tlet y = typeof arguments[0] == "object" ? arguments[0].y : arguments[1];\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t}\r\n\r\n\tadd() {\r\n\t\tlet x = typeof arguments[0] == "object" ? arguments[0].x : arguments[0];\r\n\t\tlet y = typeof arguments[0] == "object" ? arguments[0].y : arguments[1];\r\n\t\tthis.x += x || 0;\r\n\t\tthis.y += y || 0;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub() {\r\n\t\tlet x = typeof arguments[0] == "object" ? arguments[0].x : arguments[0];\r\n\t\tlet y = typeof arguments[0] == "object" ? arguments[0].y : arguments[1];\r\n\t\tthis.x -= x || 0;\r\n\t\tthis.y -= y || 0;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmult() {\r\n\t\tlet x = typeof arguments[0] == "object" ? arguments[0].x : arguments[0];\r\n\t\tlet y = typeof arguments[0] == "object" ? arguments[0].y : arguments[1];\r\n\t\tthis.x *= x || 0;\r\n\t\tthis.y *= y || 0;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdiv() {\r\n\t\tlet x = typeof arguments[0] == "object" ? arguments[0].x : arguments[0];\r\n\t\tlet y = typeof arguments[0] == "object" ? arguments[0].y : arguments[1];\r\n\t\tthis.x /= x || 0;\r\n\t\tthis.y /= y || 0;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tset() {\r\n\t\tlet x = typeof arguments[0] == "object" ? arguments[0].x : arguments[0];\r\n\t\tlet y = typeof arguments[0] == "object" ? arguments[0].y : arguments[1];\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\treturn this;\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlimit(n) {\r\n\t\tn = n || 1;\r\n\t\tif (this.getMag() >= n) this.setMag(n);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(v, weight) {\r\n\t\tweight = weight || 0.1;\r\n\t\tif (typeof v.x == "number") this.x = weight * (v.x - this.x) + this.x;\r\n\t\tif (typeof v.y == "number") this.y = weight * (v.y - this.y) + this.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdist() {\r\n\t\tlet x = typeof arguments[0] == "object" ? arguments[0].x : arguments[0];\r\n\t\tlet y = typeof arguments[0] == "object" ? arguments[0].y : arguments[1];\r\n\t\treturn Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\r\n\t}\r\n\r\n\theading() {\r\n\t\tlet x = typeof arguments[0] == "object" ? arguments[0].x : arguments[0];\r\n\t\tlet y = typeof arguments[0] == "object" ? arguments[0].y : arguments[1];\r\n\t\tif (!arguments.length) return Math.atan2(this.y, this.x);\r\n\t\treturn Math.atan2(y - this.y, x - this.x);\r\n\t}\r\n\r\n\tnorm() {\r\n\t\tlet mag = this.getMag();\r\n\t\tif (mag != 0) this.mult(1 / mag, 1 / mag);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcopy() {\r\n\t\treturn new Vector(this.x, this.y);\r\n\t}\r\n\r\n\tsetMag(n) {\r\n\t\tlet mag = this.getMag();\r\n\t\tmag = mag == 0 ? 0.001 : mag;\r\n\t\tthis.x *= (1 / mag) * n;\r\n\t\tthis.y *= (1 / mag) * n;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetMag() {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t}\r\n\r\n\trandom2D(n) {\r\n\t\tn = typeof n != "number" ? 1 : n;\r\n\r\n\t\tthis.x = random(-n, n);\r\n\t\tthis.y = random(-n, n);\r\n\t\tthis.setMag(n);\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nmodule.exports = function(x, y) {\r\n\treturn new Vector(x, y);\r\n};\n\n//# sourceURL=webpack:///./lib/vector.js?')},"./node_modules/backo2/index.js":function(module,exports){eval("\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/backo2/index.js?")},"./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":function(module,exports){eval('/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  "use strict";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = "";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + "=";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + "==";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === "=") {\n      bufferLength--;\n      if (base64[base64.length - 2] === "=") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");\n\n\n//# sourceURL=webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js?')},"./node_modules/base64-js/index.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?")},"./node_modules/component-emitter/index.js":function(module,exports,__webpack_require__){eval("\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/component-emitter/index.js?")},"./node_modules/engine.io-client/lib/globalThis.browser.js":function(module,exports){eval('module.exports = (() => {\n  if (typeof self !== "undefined") {\n    return self;\n  } else if (typeof window !== "undefined") {\n    return window;\n  } else {\n    return Function("return this")();\n  }\n})();\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/globalThis.browser.js?')},"./node_modules/engine.io-client/lib/index.js":function(module,exports,__webpack_require__){eval('const Socket = __webpack_require__(/*! ./socket */ "./node_modules/engine.io-client/lib/socket.js");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = __webpack_require__(/*! ./transport */ "./node_modules/engine.io-client/lib/transport.js");\nmodule.exports.transports = __webpack_require__(/*! ./transports/index */ "./node_modules/engine.io-client/lib/transports/index.js");\nmodule.exports.parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/index.js?')},"./node_modules/engine.io-client/lib/socket.js":function(module,exports,__webpack_require__){eval('const transports = __webpack_require__(/*! ./transports/index */ "./node_modules/engine.io-client/lib/transports/index.js");\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:socket");\nconst parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\nconst parseuri = __webpack_require__(/*! parseuri */ "./node_modules/parseuri/index.js");\nconst parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && "object" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === "https" || uri.protocol === "wss";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== "undefined" && "https:" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? "443" : "80";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== "undefined" ? location.hostname : "localhost");\n    this.port =\n      opts.port ||\n      (typeof location !== "undefined" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || ["polling", "websocket"];\n    this.readyState = "";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: "/engine.io",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: "t",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: true\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, "") + "/";\n\n    if (typeof this.opts.query === "string") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === "function") {\n      if (this.opts.closeOnBeforeunload) {\n        // Firefox closes the connection when the "beforeunload" event is emitted but not Chrome. This event listener\n        // ensures every browser behaves the same (no "disconnect" event at the Socket.IO level when the page is\n        // closed/reloaded)\n        addEventListener(\n          "beforeunload",\n          () => {\n            if (this.transport) {\n              // silently close the transport\n              this.transport.removeAllListeners();\n              this.transport.close();\n            }\n          },\n          false\n        );\n      }\n      if (this.hostname !== "localhost") {\n        this.offlineEventListener = () => {\n          this.onClose("transport close");\n        };\n        addEventListener("offline", this.offlineEventListener, false);\n      }\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug(\'creating transport "%s"\', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug("options: %j", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf("websocket") !== -1\n    ) {\n      transport = "websocket";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      setTimeout(() => {\n        this.emit("error", "No transports available");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = "opening";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug("error while creating transport: %s", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug("setting transport %s", transport.name);\n\n    if (this.transport) {\n      debug("clearing existing transport %s", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on("drain", this.onDrain.bind(this))\n      .on("packet", this.onPacket.bind(this))\n      .on("error", this.onError.bind(this))\n      .on("close", () => {\n        this.onClose("transport close");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug(\'probing transport "%s"\', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n\n    Socket.priorWebsocketSuccess = false;\n\n    const onTransportOpen = () => {\n      if (failed) return;\n\n      debug(\'probe transport "%s" opened\', name);\n      transport.send([{ type: "ping", data: "probe" }]);\n      transport.once("packet", msg => {\n        if (failed) return;\n        if ("pong" === msg.type && "probe" === msg.data) {\n          debug(\'probe transport "%s" pong\', name);\n          this.upgrading = true;\n          this.emit("upgrading", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = "websocket" === transport.name;\n\n          debug(\'pausing current transport "%s"\', this.transport.name);\n          this.transport.pause(() => {\n            if (failed) return;\n            if ("closed" === this.readyState) return;\n            debug("changing transport and sending upgrade packet");\n\n            cleanup();\n\n            this.setTransport(transport);\n            transport.send([{ type: "upgrade" }]);\n            this.emit("upgrade", transport);\n            transport = null;\n            this.upgrading = false;\n            this.flush();\n          });\n        } else {\n          debug(\'probe transport "%s" failed\', name);\n          const err = new Error("probe error");\n          err.transport = transport.name;\n          this.emit("upgradeError", err);\n        }\n      });\n    };\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    const onerror = err => {\n      const error = new Error("probe error: " + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug(\'probe transport "%s" failed because of error: %s\', name, err);\n\n      this.emit("upgradeError", error);\n    };\n\n    function onTransportClose() {\n      onerror("transport closed");\n    }\n\n    // When the socket is closed while we\'re probing\n    function onclose() {\n      onerror("socket closed");\n    }\n\n    // When the socket is upgraded while we\'re probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug(\'"%s" works - aborting "%s"\', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    const cleanup = () => {\n      transport.removeListener("open", onTransportOpen);\n      transport.removeListener("error", onerror);\n      transport.removeListener("close", onTransportClose);\n      this.removeListener("close", onclose);\n      this.removeListener("upgrading", onupgrade);\n    };\n\n    transport.once("open", onTransportOpen);\n    transport.once("error", onerror);\n    transport.once("close", onTransportClose);\n\n    this.once("close", onclose);\n    this.once("upgrading", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug("socket open");\n    this.readyState = "open";\n    Socket.priorWebsocketSuccess = "websocket" === this.transport.name;\n    this.emit("open");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      "open" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug("starting upgrade probes");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      "opening" === this.readyState ||\n      "open" === this.readyState ||\n      "closing" === this.readyState\n    ) {\n      debug(\'socket receive: type "%s", data "%s"\', packet.type, packet.data);\n\n      this.emit("packet", packet);\n\n      // Socket is live - any packet counts\n      this.emit("heartbeat");\n\n      switch (packet.type) {\n        case "open":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case "ping":\n          this.resetPingTimeout();\n          this.sendPacket("pong");\n          this.emit("pong");\n          break;\n\n        case "error":\n          const err = new Error("server error");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case "message":\n          this.emit("data", packet.data);\n          this.emit("message", packet.data);\n          break;\n      }\n    } else {\n      debug(\'packet received with socket readyState "%s"\', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit("handshake", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if ("closed" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    clearTimeout(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = setTimeout(() => {\n      this.onClose("ping timeout");\n    }, this.pingInterval + this.pingTimeout);\n    if (this.opts.autoUnref) {\n      this.pingTimeoutTimer.unref();\n    }\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit("drain");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      "closed" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug("flushing %d packets in socket", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit("flush");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket("message", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket("message", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if ("function" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if ("function" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if ("closing" === this.readyState || "closed" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit("packetCreate", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once("flush", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const close = () => {\n      this.onClose("forced close");\n      debug("socket closing - telling transport to close");\n      this.transport.close();\n    };\n\n    const cleanupAndClose = () => {\n      this.removeListener("upgrade", cleanupAndClose);\n      this.removeListener("upgradeError", cleanupAndClose);\n      close();\n    };\n\n    const waitForUpgrade = () => {\n      // wait for upgrade to finish since we can\'t send packets while pausing a transport\n      this.once("upgrade", cleanupAndClose);\n      this.once("upgradeError", cleanupAndClose);\n    };\n\n    if ("opening" === this.readyState || "open" === this.readyState) {\n      this.readyState = "closing";\n\n      if (this.writeBuffer.length) {\n        this.once("drain", () => {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug("socket error %j", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit("error", err);\n    this.onClose("transport error", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      "opening" === this.readyState ||\n      "open" === this.readyState ||\n      "closing" === this.readyState\n    ) {\n      debug(\'socket close with reason: "%s"\', reason);\n\n      // clear timers\n      clearTimeout(this.pingIntervalTimer);\n      clearTimeout(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners("close");\n\n      // ensure transport won\'t stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      if (typeof removeEventListener === "function") {\n        removeEventListener("offline", this.offlineEventListener, false);\n      }\n\n      // set ready state\n      this.readyState = "closed";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit("close", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      this.writeBuffer = [];\n      this.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/socket.js?')},"./node_modules/engine.io-client/lib/transport.js":function(module,exports,__webpack_require__){eval('const parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:transport");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = "";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = "TransportError";\n    err.description = desc;\n    this.emit("error", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if ("closed" === this.readyState || "" === this.readyState) {\n      this.readyState = "opening";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if ("opening" === this.readyState || "open" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if ("open" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug("transport is not open, discarding packets");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = "open";\n    this.writable = true;\n    this.emit("open");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit("packet", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = "closed";\n    this.emit("close");\n  }\n}\n\nmodule.exports = Transport;\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transport.js?')},"./node_modules/engine.io-client/lib/transports/index.js":function(module,exports,__webpack_require__){eval('const XMLHttpRequest = __webpack_require__(/*! ../../contrib/xmlhttprequest-ssl/XMLHttpRequest */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");\nconst XHR = __webpack_require__(/*! ./polling-xhr */ "./node_modules/engine.io-client/lib/transports/polling-xhr.js");\nconst JSONP = __webpack_require__(/*! ./polling-jsonp */ "./node_modules/engine.io-client/lib/transports/polling-jsonp.js");\nconst websocket = __webpack_require__(/*! ./websocket */ "./node_modules/engine.io-client/lib/transports/websocket.js");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== "undefined") {\n    const isSSL = "https:" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ("open" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error("JSONP disabled");\n    return new JSONP(opts);\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/index.js?')},"./node_modules/engine.io-client/lib/transports/polling-jsonp.js":function(module,exports,__webpack_require__){eval('const Polling = __webpack_require__(/*! ./polling */ "./node_modules/engine.io-client/lib/transports/polling.js");\nconst globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    callbacks.push(this.onData.bind(this));\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const script = document.createElement("script");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = e => {\n      this.onError("jsonp poll error", e);\n    };\n\n    const insertAt = document.getElementsByTagName("script")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      "undefined" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement("iframe");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement("form");\n      const area = document.createElement("textarea");\n      const id = (this.iframeId = "eio_iframe_" + this.index);\n\n      form.className = "socketio";\n      form.style.position = "absolute";\n      form.style.top = "-1000px";\n      form.style.left = "-1000px";\n      form.target = id;\n      form.method = "POST";\n      form.setAttribute("accept-charset", "utf-8");\n      area.name = "d";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    const initIframe = () => {\n      if (this.iframe) {\n        try {\n          this.form.removeChild(this.iframe);\n        } catch (e) {\n          this.onError("jsonp polling iframe removal error", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)\n        const html = \'<iframe src="javascript:0" name="\' + this.iframeId + \'">\';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement("iframe");\n        iframe.name = this.iframeId;\n        iframe.src = "javascript:0";\n      }\n\n      iframe.id = this.iframeId;\n\n      this.form.appendChild(iframe);\n      this.iframe = iframe;\n    };\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, "\\\\\\n");\n    this.area.value = data.replace(rNewline, "\\\\n");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = () => {\n        if (this.iframe.readyState === "complete") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js?')},"./node_modules/engine.io-client/lib/transports/polling-xhr.js":function(module,exports,__webpack_require__){eval('/* global attachEvent */\n\nconst XMLHttpRequest = __webpack_require__(/*! ../../contrib/xmlhttprequest-ssl/XMLHttpRequest */ "./node_modules/engine.io-client/lib/xmlhttprequest.js");\nconst Polling = __webpack_require__(/*! ./polling */ "./node_modules/engine.io-client/lib/transports/polling.js");\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\nconst { pick } = __webpack_require__(/*! ../util */ "./node_modules/engine.io-client/lib/util.js");\nconst globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");\n\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:polling-xhr");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== "undefined") {\n      const isSSL = "https:" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== "undefined" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: "POST",\n      data: data\n    });\n    req.on("success", fn);\n    req.on("error", err => {\n      this.onError("xhr post error", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug("xhr poll");\n    const req = this.request();\n    req.on("data", this.onData.bind(this));\n    req.on("error", err => {\n      this.onError("xhr poll error", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || "GET";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      "agent",\n      "enablesXDR",\n      "pfx",\n      "key",\n      "passphrase",\n      "cert",\n      "ca",\n      "ciphers",\n      "rejectUnauthorized",\n      "autoUnref"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n\n    try {\n      debug("xhr open %s: %s", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if ("POST" === this.method) {\n        try {\n          xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader("Accept", "*/*");\n      } catch (e) {}\n\n      // ie6 check\n      if ("withCredentials" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = () => {\n          this.onLoad();\n        };\n        xhr.onerror = () => {\n          this.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = () => {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this.onLoad();\n          } else {\n            // make sure the `error` event handler that\'s user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(() => {\n              this.onError(typeof xhr.status === "number" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug("xhr data %s", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the \'error\' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== "undefined") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit("success");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit("data", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit("error", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if ("undefined" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== "undefined") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== "undefined" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== "undefined") {\n  if (typeof attachEvent === "function") {\n    attachEvent("onunload", unloadHandler);\n  } else if (typeof addEventListener === "function") {\n    const terminationEvent = "onpagehide" in globalThis ? "pagehide" : "unload";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js?')},"./node_modules/engine.io-client/lib/transports/polling.js":function(module,exports,__webpack_require__){eval('const Transport = __webpack_require__(/*! ../transport */ "./node_modules/engine.io-client/lib/transport.js");\nconst parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");\nconst parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\nconst yeast = __webpack_require__(/*! yeast */ "./node_modules/yeast/index.js");\n\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:polling");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return "polling";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    this.readyState = "pausing";\n\n    const pause = () => {\n      debug("paused");\n      this.readyState = "paused";\n      onPause();\n    };\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug("we are currently polling - waiting to pause");\n        total++;\n        this.once("pollComplete", function() {\n          debug("pre-pause polling complete");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug("we are currently writing - waiting to pause");\n        total++;\n        this.once("drain", function() {\n          debug("pre-pause writing complete");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug("polling");\n    this.polling = true;\n    this.doPoll();\n    this.emit("poll");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    debug("polling got data %s", data);\n    const callback = packet => {\n      // if its the first message we consider the transport open\n      if ("opening" === this.readyState && packet.type === "open") {\n        this.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if ("close" === packet.type) {\n        this.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      this.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if ("closed" !== this.readyState) {\n      // if we got data we\'re not polling\n      this.polling = false;\n      this.emit("pollComplete");\n\n      if ("open" === this.readyState) {\n        this.poll();\n      } else {\n        debug(\'ignoring poll - transport state "%s"\', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const close = () => {\n      debug("writing close packet");\n      this.write([{ type: "close" }]);\n    };\n\n    if ("open" === this.readyState) {\n      debug("transport open - closing");\n      close();\n    } else {\n      // in case we\'re trying to close while\n      // handshaking is in progress (GH-164)\n      debug("transport not open - deferring close");\n      this.once("open", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit("drain");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? "https" : "http";\n    let port = "";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      (("https" === schema && Number(this.opts.port) !== 443) ||\n        ("http" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = ":" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = "?" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(":") !== -1;\n    return (\n      schema +\n      "://" +\n      (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling.js?')},"./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js":function(module,exports,__webpack_require__){eval('const globalThis = __webpack_require__(/*! ../globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: "arraybuffer"\n};\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js?')},"./node_modules/engine.io-client/lib/transports/websocket.js":function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(Buffer) {const Transport = __webpack_require__(/*! ../transport */ "./node_modules/engine.io-client/lib/transport.js");\nconst parser = __webpack_require__(/*! engine.io-parser */ "./node_modules/engine.io-parser/lib/index.js");\nconst parseqs = __webpack_require__(/*! parseqs */ "./node_modules/parseqs/index.js");\nconst yeast = __webpack_require__(/*! yeast */ "./node_modules/yeast/index.js");\nconst { pick } = __webpack_require__(/*! ../util */ "./node_modules/engine.io-client/lib/util.js");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType\n} = __webpack_require__(/*! ./websocket-constructor */ "./node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js");\n\nconst debug = __webpack_require__(/*! debug */ "./node_modules/engine.io-client/node_modules/debug/src/browser.js")("engine.io-client:websocket");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== "undefined" &&\n  typeof navigator.product === "string" &&\n  navigator.product.toLowerCase() === "reactnative";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return "websocket";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the \'headers\' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          "agent",\n          "perMessageDeflate",\n          "pfx",\n          "key",\n          "passphrase",\n          "cert",\n          "ca",\n          "ciphers",\n          "rejectUnauthorized",\n          "localAddress",\n          "protocolVersion",\n          "origin",\n          "maxPayload",\n          "family",\n          "checkServerIdentity"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit("error", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = this.onClose.bind(this);\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError("websocket error", e);\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n\n      parser.encodePacket(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len =\n              "string" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn\'t\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug("websocket closed before onclose event");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          setTimeout(() => {\n            this.writable = true;\n            this.emit("drain");\n          }, 0);\n        }\n      });\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== "undefined") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? "wss" : "ws";\n    let port = "";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      (("wss" === schema && Number(this.opts.port) !== 443) ||\n        ("ws" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = ":" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = "?" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(":") !== -1;\n    return (\n      schema +\n      "://" +\n      (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !("__initialize" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/websocket.js?')},"./node_modules/engine.io-client/lib/util.js":function(module,exports){eval("module.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/util.js?")},"./node_modules/engine.io-client/lib/xmlhttprequest.js":function(module,exports,__webpack_require__){eval('// browser shim for xmlhttprequest module\n\nconst hasCORS = __webpack_require__(/*! has-cors */ "./node_modules/has-cors/index.js");\nconst globalThis = __webpack_require__(/*! ./globalThis */ "./node_modules/engine.io-client/lib/globalThis.browser.js");\n\nmodule.exports = function(opts) {\n  const xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  const xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  const enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ("undefined" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ("undefined" !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[["Active"].concat("Object").join("X")](\n        "Microsoft.XMLHTTP"\n      );\n    } catch (e) {}\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js?')},"./node_modules/engine.io-client/node_modules/debug/src/browser.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/engine.io-client/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/debug/src/browser.js?")},"./node_modules/engine.io-client/node_modules/debug/src/common.js":function(module,exports,__webpack_require__){eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/engine.io-client/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/debug/src/common.js?")},"./node_modules/engine.io-client/node_modules/ms/index.js":function(module,exports){eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/ms/index.js?")},"./node_modules/engine.io-parser/lib/commons.js":function(module,exports){eval('const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES["open"] = "0";\nPACKET_TYPES["close"] = "1";\nPACKET_TYPES["ping"] = "2";\nPACKET_TYPES["pong"] = "3";\nPACKET_TYPES["message"] = "4";\nPACKET_TYPES["upgrade"] = "5";\nPACKET_TYPES["noop"] = "6";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: "error", data: "parser error" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/commons.js?')},"./node_modules/engine.io-parser/lib/decodePacket.browser.js":function(module,exports,__webpack_require__){eval('const { PACKET_TYPES_REVERSE, ERROR_PACKET } = __webpack_require__(/*! ./commons */ "./node_modules/engine.io-parser/lib/commons.js");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === "function";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = __webpack_require__(/*! base64-arraybuffer */ "./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== "string") {\n    return {\n      type: "message",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === "b") {\n    return {\n      type: "message",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case "blob":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case "arraybuffer":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/decodePacket.browser.js?')},"./node_modules/engine.io-parser/lib/encodePacket.browser.js":function(module,exports,__webpack_require__){eval('const { PACKET_TYPES } = __webpack_require__(/*! ./commons */ "./node_modules/engine.io-parser/lib/commons.js");\n\nconst withNativeBlob =\n  typeof Blob === "function" ||\n  (typeof Blob !== "undefined" &&\n    Object.prototype.toString.call(Blob) === "[object BlobConstructor]");\nconst withNativeArrayBuffer = typeof ArrayBuffer === "function";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === "function"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || ""));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(",")[1];\n    callback("b" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/encodePacket.browser.js?')},"./node_modules/engine.io-parser/lib/index.js":function(module,exports,__webpack_require__){eval('const encodePacket = __webpack_require__(/*! ./encodePacket */ "./node_modules/engine.io-parser/lib/encodePacket.browser.js");\nconst decodePacket = __webpack_require__(/*! ./decodePacket */ "./node_modules/engine.io-parser/lib/decodePacket.browser.js");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === "error") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/index.js?')},"./node_modules/has-cors/index.js":function(module,exports){eval("\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n//# sourceURL=webpack:///./node_modules/has-cors/index.js?")},"./node_modules/ieee754/index.js":function(module,exports){eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?")},"./node_modules/isarray/index.js":function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?")},"./node_modules/node-libs-browser/node_modules/buffer/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js?")},"./node_modules/parseqs/index.js":function(module,exports){eval("/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n\n//# sourceURL=webpack:///./node_modules/parseqs/index.js?")},"./node_modules/parseuri/index.js":function(module,exports){eval("/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n\n\n//# sourceURL=webpack:///./node_modules/parseuri/index.js?")},"./node_modules/process/browser.js":function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?")},"./node_modules/socket.io-client/build/index.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.io = exports.Socket = exports.Manager = exports.protocol = void 0;\nconst url_1 = __webpack_require__(/*! ./url */ "./node_modules/socket.io-client/build/url.js");\nconst manager_1 = __webpack_require__(/*! ./manager */ "./node_modules/socket.io-client/build/manager.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")("socket.io-client");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === "object") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_1.url(uri, opts.path || "/socket.io");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id]["nsps"];\n    const newConnection = opts.forceNew ||\n        opts["force new connection"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug("ignoring socket cache for %s", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug("new io instance for %s", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");\nObject.defineProperty(exports, "protocol", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = __webpack_require__(/*! ./manager */ "./node_modules/socket.io-client/build/manager.js");\nObject.defineProperty(exports, "Manager", { enumerable: true, get: function () { return manager_2.Manager; } });\nvar socket_1 = __webpack_require__(/*! ./socket */ "./node_modules/socket.io-client/build/socket.js");\nObject.defineProperty(exports, "Socket", { enumerable: true, get: function () { return socket_1.Socket; } });\nexports.default = lookup;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/build/index.js?')},"./node_modules/socket.io-client/build/manager.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.Manager = void 0;\nconst eio = __webpack_require__(/*! engine.io-client */ "./node_modules/engine.io-client/lib/index.js");\nconst socket_1 = __webpack_require__(/*! ./socket */ "./node_modules/socket.io-client/build/socket.js");\nconst parser = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");\nconst on_1 = __webpack_require__(/*! ./on */ "./node_modules/socket.io-client/build/on.js");\nconst Backoff = __webpack_require__(/*! backo2 */ "./node_modules/backo2/index.js");\nconst typed_events_1 = __webpack_require__(/*! ./typed-events */ "./node_modules/socket.io-client/build/typed-events.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")("socket.io-client:manager");\nclass Manager extends typed_events_1.StrictEventEmitter {\n    constructor(uri, opts) {\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && "object" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || "/socket.io";\n        this.opts = opts;\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor(opts.randomizationFactor || 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = "closed";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it\'s the first time we\'re connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug("readyState %s", this._readyState);\n        if (~this._readyState.indexOf("open"))\n            return this;\n        debug("opening %s", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = "opening";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_1.on(socket, "open", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_1.on(socket, "error", (err) => {\n            debug("error");\n            self.cleanup();\n            self._readyState = "closed";\n            this.emitReserved("error", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug("connect attempt will timeout after %d", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the \'open\' event\n            }\n            // set timer\n            const timer = setTimeout(() => {\n                debug("connect attempt timed out after %d", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit("error", new Error("timeout"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug("open");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = "open";\n        this.emitReserved("open");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_1.on(socket, "ping", this.onping.bind(this)), on_1.on(socket, "data", this.ondata.bind(this)), on_1.on(socket, "error", this.onerror.bind(this)), on_1.on(socket, "close", this.onclose.bind(this)), on_1.on(this.decoder, "decoded", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved("ping");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved("packet", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug("error", err);\n        this.emitReserved("error", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug("socket %s is still active, skipping close", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug("writing packet %j", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug("cleanup");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug("disconnect");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if ("opening" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = "closed";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug("onclose");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = "closed";\n        this.emitReserved("close", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug("reconnect failed");\n            this.backoff.reset();\n            this.emitReserved("reconnect_failed");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug("will wait %dms before reconnect attempt", delay);\n            this._reconnecting = true;\n            const timer = setTimeout(() => {\n                if (self.skipReconnect)\n                    return;\n                debug("attempting reconnect");\n                this.emitReserved("reconnect_attempt", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug("reconnect attempt error");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved("reconnect_error", err);\n                    }\n                    else {\n                        debug("reconnect success");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved("reconnect", attempt);\n    }\n}\nexports.Manager = Manager;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/build/manager.js?')},"./node_modules/socket.io-client/build/on.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/build/on.js?')},"./node_modules/socket.io-client/build/socket.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = __webpack_require__(/*! socket.io-parser */ "./node_modules/socket.io-parser/dist/index.js");\nconst on_1 = __webpack_require__(/*! ./on */ "./node_modules/socket.io-client/build/on.js");\nconst typed_events_1 = __webpack_require__(/*! ./typed-events */ "./node_modules/socket.io-client/build/typed-events.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")("socket.io-client:socket");\n/**\n * Internal events.\n * These events can\'t be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends typed_events_1.StrictEventEmitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        this.ids = 0;\n        this.acks = {};\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.connected = false;\n        this.disconnected = true;\n        this.flags = {};\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on_1.on(io, "open", this.onopen.bind(this)),\n            on_1.on(io, "packet", this.onpacket.bind(this)),\n            on_1.on(io, "error", this.onerror.bind(this)),\n            on_1.on(io, "close", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * "Opens" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io["_reconnecting"])\n            this.io.open(); // ensure open\n        if ("open" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift("message");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it\'s emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error(\'"\' + ev + \'" is a reserved event name\');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if ("function" === typeof args[args.length - 1]) {\n            debug("emitting packet with ack id %d", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug("discard packet as the transport is not currently writable");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug("transport is open - connecting");\n        if (typeof this.auth == "function") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved("connect_error", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug("close (%s)", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved("disconnect", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved("connect_error", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug("emitting event %j", args);\n        if (null != packet.id) {\n            debug("attaching ack callback to event");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug("sending ack %j", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if ("function" === typeof ack) {\n            debug("calling ack %s with %j", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug("bad ack %s", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug("socket connected with id %s", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved("connect");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug("server disconnect (%s)", this.nsp);\n        this.destroy();\n        this.onclose("io server disconnect");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don\'t get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io["_destroy"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug("performing disconnect (%s)", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose("io client disconnect");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/build/socket.js?')},"./node_modules/socket.io-client/build/typed-events.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.StrictEventEmitter = void 0;\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/build/typed-events.js?')},"./node_modules/socket.io-client/build/url.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.url = void 0;\nconst parseuri = __webpack_require__(/*! parseuri */ "./node_modules/parseuri/index.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-client/node_modules/debug/src/browser.js")("socket.io-client:url");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = "", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== "undefined" && location);\n    if (null == uri)\n        uri = loc.protocol + "//" + loc.host;\n    // relative path support\n    if (typeof uri === "string") {\n        if ("/" === uri.charAt(0)) {\n            if ("/" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug("protocol-less url %s", uri);\n            if ("undefined" !== typeof loc) {\n                uri = loc.protocol + "//" + uri;\n            }\n            else {\n                uri = "https://" + uri;\n            }\n        }\n        // parse\n        debug("parse %s", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = "80";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = "443";\n        }\n    }\n    obj.path = obj.path || "/";\n    const ipv6 = obj.host.indexOf(":") !== -1;\n    const host = ipv6 ? "[" + obj.host + "]" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + "://" + host + ":" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            "://" +\n            host +\n            (loc && loc.port === obj.port ? "" : ":" + obj.port);\n    return obj;\n}\nexports.url = url;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/build/url.js?')},"./node_modules/socket.io-client/node_modules/debug/src/browser.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/socket.io-client/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/debug/src/browser.js?")},"./node_modules/socket.io-client/node_modules/debug/src/common.js":function(module,exports,__webpack_require__){eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/socket.io-client/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/debug/src/common.js?")},"./node_modules/socket.io-client/node_modules/ms/index.js":function(module,exports){eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/ms/index.js?")},"./node_modules/socket.io-parser/dist/binary.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = __webpack_require__(/*! ./is-binary */ "./node_modules/socket.io-parser/dist/is-binary.js");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary \'attachments\'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === "object" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === "object") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/dist/binary.js?')},"./node_modules/socket.io-parser/dist/index.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = __webpack_require__(/*! component-emitter */ "./node_modules/component-emitter/index.js");\nconst binary_1 = __webpack_require__(/*! ./binary */ "./node_modules/socket.io-parser/dist/binary.js");\nconst is_binary_1 = __webpack_require__(/*! ./is-binary */ "./node_modules/socket.io-parser/dist/is-binary.js");\nconst debug = __webpack_require__(/*! debug */ "./node_modules/socket.io-parser/node_modules/debug/src/browser.js")("socket.io-parser");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType["CONNECT"] = 0] = "CONNECT";\n    PacketType[PacketType["DISCONNECT"] = 1] = "DISCONNECT";\n    PacketType[PacketType["EVENT"] = 2] = "EVENT";\n    PacketType[PacketType["ACK"] = 3] = "ACK";\n    PacketType[PacketType["CONNECT_ERROR"] = 4] = "CONNECT_ERROR";\n    PacketType[PacketType["BINARY_EVENT"] = 5] = "BINARY_EVENT";\n    PacketType[PacketType["BINARY_ACK"] = 6] = "BINARY_ACK";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug("encoding packet %j", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = "" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + "-";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && "/" !== obj.nsp) {\n            str += obj.nsp + ",";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug("encoded %j as %s", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as \'buffer sequence\' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === "string") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet\'s json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit("decoded", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit("decoded", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error("got binary data when not reconstructing a packet");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit("decoded", packet);\n                }\n            }\n        }\n        else {\n            throw new Error("Unknown type: " + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error("unknown packet type " + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== "-" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== "-") {\n                throw new Error("Illegal attachments");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if ("/" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if ("," === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = "/";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if ("" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error("invalid payload");\n            }\n        }\n        debug("decoded %s as %j", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === "object";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === "string" || typeof payload === "object";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser\'s resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event\'s \'buffer sequence\'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/dist/index.js?')},"./node_modules/socket.io-parser/dist/is-binary.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === "function";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === "function"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === "function" ||\n    (typeof Blob !== "undefined" &&\n        toString.call(Blob) === "[object BlobConstructor]");\nconst withNativeFile = typeof File === "function" ||\n    (typeof File !== "undefined" &&\n        toString.call(File) === "[object FileConstructor]");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== "object") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === "function" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/dist/is-binary.js?')},"./node_modules/socket.io-parser/node_modules/debug/src/browser.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/socket.io-parser/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/debug/src/browser.js?")},"./node_modules/socket.io-parser/node_modules/debug/src/common.js":function(module,exports,__webpack_require__){eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/socket.io-parser/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/debug/src/common.js?")},"./node_modules/socket.io-parser/node_modules/ms/index.js":function(module,exports){eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/ms/index.js?")},"./node_modules/stats.js/build/stats.min.js":function(module,exports,__webpack_require__){eval('// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){ true?module.exports=e():undefined})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?"block":"none";l=a}var l=0,c=document.createElement("div");c.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000";c.addEventListener("click",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel("FPS","#0ff","#002")),h=e(new f.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var t=e(new f.Panel("MB","#f08","#201"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement("canvas");q.width=r;q.height=h;q.style.cssText="width:80px;height:48px";var b=q.getContext("2d");b.font="bold "+9*a+"px Helvetica,Arial,sans-serif";b.textBaseline="top";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+" "+e+" ("+g(c)+"-"+g(k)+")",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n\n\n//# sourceURL=webpack:///./node_modules/stats.js/build/stats.min.js?')},"./node_modules/webpack/buildin/global.js":function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?')},"./node_modules/yeast/index.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n//# sourceURL=webpack:///./node_modules/yeast/index.js?")},"./src/client/js/app.js":function(module,exports,__webpack_require__){eval('const renderer = __webpack_require__(/*! ../lib/renderer.js */ "./src/client/lib/renderer.js");\r\nconst config = __webpack_require__(/*! ../../../lib/config.js */ "./lib/config.js");\r\nconst vector = __webpack_require__(/*! ../../../lib/vector.js */ "./lib/vector.js");\r\nconst shape = __webpack_require__(/*! ../../../lib/shape.js */ "./lib/shape.js");\r\nconst mouse = __webpack_require__(/*! ../../../lib/mouse.js */ "./lib/mouse.js");\r\nconst key = __webpack_require__(/*! ../../../lib/key.js */ "./lib/key.js");\r\nconst utils = __webpack_require__(/*! ../../../lib/utils.js */ "./lib/utils.js");\r\nconst client = __webpack_require__(/*! ./client.js */ "./src/client/js/client.js");\r\nconst vue = __webpack_require__(/*! ./vue/vue.js */ "./src/client/js/vue/vue.js");\r\nconst Room = __webpack_require__(/*! ./classes/room.js */ "./src/client/js/classes/room.js");\r\nwindow.client = client;\r\n\r\nlet room = null;\r\n\r\nclient.socket.on("client:room:enter", serverRoom => {\r\n\t//Create the client\'s room\r\n\troom = Room.create(serverRoom.id, {\r\n\t\tindex: serverRoom.index,\r\n\t\tdescription: serverRoom.description,\r\n\t\tpassword: serverRoom.password,\r\n\t\tmaxWave: serverRoom.maxWave,\r\n\t\tcurrentWave: serverRoom.currentWave,\r\n\t\tsize: serverRoom.size,\r\n\t\twallWidth: serverRoom.wallWidth,\r\n\t\tbackground: serverRoom.background\r\n\t});\r\n});\r\n\r\nclient.socket.on("client:room:update", serverRoom => {\r\n\t//Adding / Updating players\r\n\r\n\tlet serverPlayers = serverRoom.players;\r\n\tfor (var i = 0; i < serverPlayers.length; i++) {\r\n\t\tlet serverPlayer = serverPlayers[i];\r\n\t\t//Check if the server player already exists in the client\'s room\r\n\t\tlet clientPlayer = room.getPlayer(serverPlayer.id);\r\n\t\tif (clientPlayer) {\r\n\t\t\t//If it exists, just update it\r\n\t\t\tclientPlayer.serverPosition.set(serverPlayer.position);\r\n\t\t\tclientPlayer.mouse.set(serverPlayer.mouse);\r\n\r\n\t\t\tlet newAngle = clientPlayer.mouse.heading(clientPlayer.position);\r\n\t\t\tclientPlayer.angle = newAngle;\r\n\t\t\tclientPlayer.radius = serverPlayer.radius;\r\n\t\t} else {\r\n\t\t\t//If it doesn\'t exist, add it in the client\'s room\r\n\t\t\troom.addPlayer(serverPlayer.id, {\r\n\t\t\t\tposition: vector(serverPlayer.position),\r\n\t\t\t\tmouse: vector(serverPlayer.mouse),\r\n\t\t\t\tradius: serverPlayer.radius\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//Deleting players\r\n\r\n\t//Loop through client players\r\n\tfor (var i = 0; i < room.players.length; i++) {\r\n\t\tlet clientPlayer = room.players[i];\r\n\t\t//Check if a client player exists in the server players\r\n\t\tlet player = serverPlayers.find(p => p.id === clientPlayer.id);\r\n\t\tif (!player) {\r\n\t\t\t//If not, remove the player in the room\r\n\t\t\troom.removePlayer(clientPlayer.id);\r\n\t\t}\r\n\t}\r\n\r\n\t//Adding / Updating zombies\r\n\r\n\tlet serverZombies = serverRoom.zombies;\r\n\tfor (var i = 0; i < serverZombies.length; i++) {\r\n\t\tlet serverZombie = serverZombies[i];\r\n\t\t//Check if the server zombie already exists in the client\'s room\r\n\t\tlet clientZombie = room.getZombie(serverZombie.id);\r\n\t\tif (clientZombie) {\r\n\t\t\t//If it exists, just update it\r\n\t\t\tclientZombie.serverPosition.set(serverZombie.position);\r\n\t\t\tclientZombie.radius = serverZombie.radius;\r\n\t\t\tclientZombie.angle = serverZombie.angle;\r\n\t\t} else {\r\n\t\t\t//If it doesn\'t exist, add it in the client\'s room\r\n\t\t\troom.addZombie(serverZombie.id, {\r\n\t\t\t\tposition: vector(serverZombie.position),\r\n\t\t\t\tradius: serverZombie.radius,\r\n\t\t\t\tangle: serverZombie.angle\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//Deleting zombies\r\n\r\n\t//Loop through client zombies\r\n\tfor (var i = 0; i < room.zombies.length; i++) {\r\n\t\tlet clientZombie = room.zombies[i];\r\n\t\t//Check if a client zombie exists in the server zombies\r\n\t\tlet zombie = serverZombies.find(z => z.id === clientZombie.id);\r\n\t\tif (!zombie) {\r\n\t\t\t//If not, remove the zombie in the room\r\n\t\t\troom.removeZombie(clientZombie.id);\r\n\t\t}\r\n\t}\r\n\r\n\t//Adding / Updating bullets\r\n\r\n\tlet serverBullets = serverRoom.bullets;\r\n\tfor (var i = 0; i < serverBullets.length; i++) {\r\n\t\tlet serverBullet = serverBullets[i];\r\n\t\t//Check if the server bullet already exists in the client\'s room\r\n\t\tlet clientBullet = room.getBullet(serverBullet.id);\r\n\t\tif (clientBullet) {\r\n\t\t\t//If it exists, just update it\r\n\t\t\tclientBullet.serverPosition.set(serverBullet.position);\r\n\t\t} else {\r\n\t\t\t//If it doesn\'t exist, add it in the client\'s room\r\n\t\t\tlet playerPosition = room.getPlayer(serverBullet.playerId).position.copy();\r\n\t\t\troom.addBullet(serverBullet.id, {\r\n\t\t\t\tplayerId: serverBullet.playerId,\r\n\t\t\t\tposition: vector({\r\n\t\t\t\t\tx: playerPosition.x + Math.cos(serverBullet.angle + 0.17) * 22,\r\n\t\t\t\t\ty: playerPosition.y + Math.sin(serverBullet.angle + 0.17) * 22\r\n\t\t\t\t}),\r\n\t\t\t\tradius: serverBullet.radius,\r\n\t\t\t\tangle: serverBullet.angle\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//Deleting bullets\r\n\r\n\t//Loop through client bullets\r\n\tfor (var i = 0; i < room.bullets.length; i++) {\r\n\t\tlet clientBullet = room.bullets[i];\r\n\t\t//Check if a client bullet exists in the server bullets\r\n\t\tlet bullet = serverBullets.find(p => p.id === clientBullet.id);\r\n\t\tif (!bullet) {\r\n\t\t\t//If not, remove the bullet in the room\r\n\t\t\troom.removeBullet(clientBullet.id);\r\n\t\t}\r\n\t}\r\n\r\n\t//Adding / Updating barriers\r\n\r\n\tlet serverBarriers = serverRoom.barriers;\r\n\tfor (var i = 0; i < serverBarriers.length; i++) {\r\n\t\tlet serverBarrier = serverBarriers[i];\r\n\t\t//Check if the server barrier already exists in the client\'s room\r\n\t\tlet clientBarrier = room.getBarrier(serverBarrier.id);\r\n\t\tif (clientBarrier) {\r\n\t\t\t//If it exists, just update it\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t//If it doesn\'t exist, add it in the client\'s room\r\n\t\t\troom.addBarrier(serverBarrier.id, {\r\n\t\t\t\tposition: vector(serverBarrier.position),\r\n\t\t\t\twidth: serverBarrier.width,\r\n\t\t\t\theight: serverBarrier.height,\r\n\t\t\t\tangle: serverBarrier.angle,\r\n\t\t\t\tvertices: serverBarrier.vertices\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n});\r\n\r\nrenderer.fullscreen();\r\nrenderer.render(function() {\r\n\tif (room) {\r\n\t\tlet wm = renderer.camera.screenToWorld(mouse.x, mouse.y);\r\n\t\tclient.setMouse(wm.x, wm.y);\r\n\r\n\t\tif (key.check(config.player.controls.moveUp)) {\r\n\t\t\tclient.moveUp();\r\n\t\t}\r\n\t\tif (key.check(config.player.controls.moveRight)) {\r\n\t\t\tclient.moveRight();\r\n\t\t}\r\n\t\tif (key.check(config.player.controls.moveDown)) {\r\n\t\t\tclient.moveDown();\r\n\t\t}\r\n\t\tif (key.check(config.player.controls.moveLeft)) {\r\n\t\t\tclient.moveLeft();\r\n\t\t}\r\n\t\tif (mouse.pressed) {\r\n\t\t\tclient.shoot();\r\n\t\t}\r\n\t}\r\n\r\n\trenderer.camera.begin(function() {\r\n\t\tif (room) {\r\n\t\t\tif (room.localPlayer) {\r\n\t\t\t\trenderer.camera.moveTo(room.localPlayer.position.x, room.localPlayer.position.y);\r\n\t\t\t\trenderer.camera.zoomTo(config.player.zoom);\r\n\t\t\t}\r\n\t\t\troom.render(renderer);\r\n\t\t\troom.update();\r\n\t\t}\r\n\t})\r\n});\r\n\r\nkey.on("keydown", function() {\r\n\tif (key.code == 16) {\r\n\t\tconsole.log(renderer.getFrameRate());\r\n\t\tconsole.log(room);\r\n\t}\r\n})\n\n//# sourceURL=webpack:///./src/client/js/app.js?')},"./src/client/js/classes/barrier.js":function(module,exports){eval('class Barrier {\r\n\tconstructor(id, options) {\r\n\t\tthis.id = id;\r\n\t\tthis.position = options.position;\r\n\t\tthis.width = options.width;\r\n\t\tthis.height = options.height;\r\n\t\tthis.angle = options.angle;\r\n\t\t\r\n\t\tthis.vertices = options.vertices;\r\n\t}\r\n\r\n\trender(renderer) {\r\n\t\trenderer.fromVertices(this.vertices, {\r\n\t\t\tfill: "#191b1e"\r\n\t\t});\r\n\t}\r\n\r\n\tupdate() {\r\n\t\t\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcreate: function (id, options) {\r\n\t\treturn new Barrier(id, options);\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/client/js/classes/barrier.js?')},"./src/client/js/classes/bullet.js":function(module,exports,__webpack_require__){eval('const vector = __webpack_require__(/*! ../../../../lib/vector.js */ "./lib/vector.js");\r\nconst bulletImg = new Image();\r\nbulletImg.src = "assets/images/player/bullet.png";\r\nclass Bullet {\r\n\tconstructor(id, options) {\r\n\t\tthis.id = id;\r\n\t\tthis.playerId = options.playerId;\r\n\t\tthis.angle = options.angle;\r\n\t\tthis.position = options.position;\r\n\t\tthis.serverPosition = this.position.copy();\r\n\t\tthis.radius = options.radius;\r\n\t}\r\n\r\n\trender(renderer) {\r\n\t\trenderer.save();\r\n\t\trenderer.context.translate(this.position.x, this.position.y);\r\n\t\trenderer.context.rotate(this.angle);\r\n\t\tlet size = this.radius * 0.1;\r\n\t\trenderer.context.scale(size, size);\r\n\t\trenderer.context.drawImage(bulletImg, -bulletImg.width / 2, -bulletImg.height / 2);\r\n\t\trenderer.restore();\r\n\t\t/*renderer.circle(this.position.x, this.position.y, this.radius, {\r\n\t\t\tfill: "red"\r\n\t\t});*/\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.position.lerp(this.serverPosition, 0.3);\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcreate: function (id, options) {\r\n\t\treturn new Bullet(id, options);\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/client/js/classes/bullet.js?')},"./src/client/js/classes/player.js":function(module,exports,__webpack_require__){eval('const shape = __webpack_require__(/*! ../../../../lib/shape.js */ "./lib/shape.js");\r\nconst playerImg = new Image();\r\nplayerImg.src = "assets/images/player/player.png";\r\nclass Player {\r\n\tconstructor(id, options) {\r\n\t\tthis.id = id;\r\n\t\tthis.position = options.position;\r\n\t\tthis.serverPosition = this.position.copy();\r\n\t\tthis.radius = options.radius;\r\n\t\tthis.mouse = options.mouse;\r\n\t\tthis.angle = 0;\r\n\t\tthis.shape = shape.polygon(this.position.x, this.position.y, this.radius, 16);\r\n\t\t//this.shape.scale(2, 1);\r\n\t}\r\n\r\n\trender(renderer) {\r\n\t\trenderer.save();\r\n\t\trenderer.context.translate(this.position.x, this.position.y);\r\n\t\trenderer.context.rotate(this.angle + Math.PI);\r\n\t\tlet size = this.radius * 0.03;\r\n\t\trenderer.context.scale(size, size);\r\n\t\trenderer.context.drawImage(playerImg, -playerImg.width / 2 + 15, -playerImg.height / 2);\r\n\t\trenderer.restore();\r\n\r\n\t\t/*renderer.circle(this.position.x, this.position.y, this.radius, {\r\n\t\t\tfill: "white"\r\n\t\t});*/\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.position.lerp(this.serverPosition, 0.2);\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcreate: function (id, options) {\r\n\t\treturn new Player(id, options);\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/client/js/classes/player.js?')},"./src/client/js/classes/room.js":function(module,exports,__webpack_require__){eval('const client = __webpack_require__(/*! ./../client.js */ "./src/client/js/client.js");\r\nconst vector = __webpack_require__(/*! ../../../../lib/vector.js */ "./lib/vector.js");\r\nconst config = __webpack_require__(/*! ../../../../lib/config.js */ "./lib/config.js");\r\nconst utils = __webpack_require__(/*! ../../../../lib/utils.js */ "./lib/utils.js");\r\nconst Ray = __webpack_require__(/*! ../../lib/ray.js */ "./src/client/lib/ray.js");\r\nconst Player = __webpack_require__(/*! ./player.js */ "./src/client/js/classes/player.js");\r\nconst Zombie = __webpack_require__(/*! ./zombie.js */ "./src/client/js/classes/zombie.js");\r\nconst Bullet = __webpack_require__(/*! ./bullet.js */ "./src/client/js/classes/bullet.js");\r\nconst Barrier = __webpack_require__(/*! ./barrier.js */ "./src/client/js/classes/barrier.js");\r\n\r\nclass Room {\r\n\tconstructor(id, options) {\r\n\t\toptions = options || {};\r\n\r\n\t\t//Important properties\r\n\t\tthis.id = id;\r\n\t\tthis.index = options.index;\r\n\t\tthis.description = options.description;\r\n\t\tthis.password = options.password;\r\n\t\tthis.maxWave = options.maxWave;\r\n\t\tthis.currentWave = options.currentWave;\r\n\r\n\t\t//Other properties\r\n\t\tthis.size = options.size;\r\n\t\tthis.wallWidth = options.wallWidth;\r\n\t\tthis.background = options.background;\r\n\t\tthis.shadowColor = "#28252b";\r\n\r\n\t\t//Objects\r\n\t\tthis.localPlayer = null;\r\n\t\tthis.players = [];\r\n\t\tthis.zombies = [];\r\n\t\tthis.bullets = [];\r\n\t\tthis.barriers = [];\r\n\t\tthis.sight = Ray.create();\r\n\r\n\t\t//Fix corner shadows\r\n\t\tthis.sight.addBarrier(-this.size / 2 + this.wallWidth, -this.size / 2 + this.wallWidth, this.size / 2 - this.wallWidth, -this.size / 2 + this.wallWidth);\r\n\t\tthis.sight.addBarrier(this.size / 2 - this.wallWidth, -this.size / 2 + this.wallWidth, this.size / 2 - this.wallWidth, this.size / 2 - this.wallWidth);\r\n\t\tthis.sight.addBarrier(this.size / 2 - this.wallWidth, this.size / 2 - this.wallWidth, -this.size / 2 + this.wallWidth, this.size / 2 - this.wallWidth);\r\n\t\tthis.sight.addBarrier(-this.size / 2 + this.wallWidth, this.size / 2 - this.wallWidth, -this.size / 2 + this.wallWidth, -this.size / 2 + this.wallWidth);\r\n\t}\r\n\r\n\trender(renderer) {\r\n\t\t//Draw the background\r\n\t\trenderer.rect(-this.size / 2, -this.size / 2, this.size, this.size, {\r\n\t\t\tfill: this.shadowColor\r\n\t\t});\r\n\r\n\t\t//Draw the barriers\r\n\t\tfor (var i = 0; i < this.barriers.length; i++) {\r\n\t\t\tlet barrier = this.barriers[i];\r\n\t\t\tif (renderer.camera.sees(barrier.position.x, barrier.position.y, barrier.width, barrier.height)) barrier.render(renderer);\r\n\t\t}\r\n\r\n\t\tlet sight = this.sight.getShape();\r\n\t\tfor (var i = 0; i < sight.length; i++) {\r\n\t\t\tlet castA = sight[i];\r\n\t\t\tfor (var j = 0; j < sight.length; j++) {\r\n\t\t\t\tlet castB = sight[j];\r\n\t\t\t\tif (castA === castB) continue;\r\n\t\t\t\tlet offset = 1;\r\n\t\t\t\tif (castA.x >= castB.x - offset && castA.x <= castB.x + offset && castA.y >= castB.y - offset && castA.y <= castB.y + offset) {\r\n\t\t\t\t\tsight.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trenderer.save();\r\n\r\n\t\t//Draw the line of sight\r\n\t\trenderer.fromVertices(sight, {\r\n\t\t\tfill: this.background,\r\n\t\t\tclose: true\r\n\t\t});\r\n\r\n\t\trenderer.clip();\r\n\r\n\t\t//Draw the bullets\r\n\t\tfor (var i = 0; i < this.bullets.length; i++) {\r\n\t\t\tlet bullet = this.bullets[i];\r\n\t\t\tif (renderer.camera.sees(bullet.position.x, bullet.position.y, bullet.radius, bullet.radius)) bullet.render(renderer);\r\n\t\t}\r\n\t\t\r\n\t\t//Draw the players\r\n\t\tfor (var i = 0; i < this.players.length; i++) {\r\n\t\t\tlet player = this.players[i];\r\n\t\t\tif (renderer.camera.sees(player.position.x, player.position.y, player.radius, player.radius)) player.render(renderer);\r\n\t\t}\r\n\r\n\t\t//Draw the zombies\r\n\t\tfor (var i = 0; i < this.zombies.length; i++) {\r\n\t\t\tlet zombie = this.zombies[i];\r\n\t\t\tif (renderer.camera.sees(zombie.position.x, zombie.position.y, zombie.radius, zombie.radius)) zombie.render(renderer);\r\n\t\t}\r\n\r\n\t\trenderer.restore();\r\n\t}\r\n\r\n\tupdate() {\r\n\t\t//Update the players\r\n\t\tfor (var i = 0; i < this.players.length; i++) {\r\n\t\t\tlet player = this.players[i];\r\n\t\t\tplayer.update();\r\n\t\t}\r\n\r\n\t\t//Update the zombies\r\n\t\tfor (var i = 0; i < this.zombies.length; i++) {\r\n\t\t\tlet zombie = this.zombies[i];\r\n\t\t\tzombie.update();\r\n\t\t}\r\n\r\n\t\t//Update the bullets\r\n\t\tfor (var i = 0; i < this.bullets.length; i++) {\r\n\t\t\tlet bullet = this.bullets[i];\r\n\t\t\tbullet.update();\r\n\t\t}\r\n\r\n\t\tif (this.localPlayer) {\r\n\t\t\tthis.sight.position.x = this.localPlayer.position.x;\r\n\t\t\tthis.sight.position.y = this.localPlayer.position.y;\r\n\t\t\tthis.sight.cast();\r\n\t\t}\r\n\t}\r\n\r\n\tgetPlayer(id) {\r\n\t\tlet player = this.players.find(p => p.id === id) || null;\r\n\t\treturn player;\r\n\t}\r\n\r\n\taddPlayer(id, options) {\r\n\t\tlet player = Player.create(id, options);\r\n\t\tthis.players.push(player);\r\n\t\tif (id === client.socket.id) {\r\n\t\t\tthis.localPlayer = player;\r\n\t\t}\r\n\t\treturn player;\r\n\t}\r\n\r\n\tremovePlayer(id) {\r\n\t\tlet player = this.getPlayer(id);\r\n\t\tif (player) {\r\n\t\t\tthis.players.splice(this.players.indexOf(player), 1);\r\n\t\t}\r\n\t}\r\n\r\n\tgetZombie(id) {\r\n\t\tlet zombie = this.zombies.find(z => z.id === id) || null;\r\n\t\treturn zombie;\r\n\t}\r\n\r\n\taddZombie(id, options) {\r\n\t\tlet zombie = Zombie.create(id, options);\r\n\t\tthis.zombies.push(zombie);\r\n\t\treturn zombie;\r\n\t}\r\n\r\n\tremoveZombie(id) {\r\n\t\tlet zombie = this.getZombie(id);\r\n\t\tif (zombie) {\r\n\t\t\tthis.zombies.splice(this.zombies.indexOf(zombie), 1);\r\n\t\t}\r\n\t}\r\n\r\n\tgetBullet(id) {\r\n\t\tlet bullet = this.bullets.find(b => b.id === id) || null;\r\n\t\treturn bullet;\r\n\t}\r\n\r\n\taddBullet(id, options) {\r\n\t\tlet bullet = Bullet.create(id, options);\r\n\t\tthis.bullets.push(bullet);\r\n\t\treturn bullet;\r\n\t}\r\n\r\n\tremoveBullet(id) {\r\n\t\tlet bullet = this.getBullet(id);\r\n\t\tif (bullet) {\r\n\t\t\tthis.bullets.splice(this.bullets.indexOf(bullet), 1);\r\n\t\t}\r\n\t}\r\n\r\n\tgetBarrier(id) {\r\n\t\tlet barrier = this.barriers.find(b => b.id === id) || null;\r\n\t\treturn barrier;\r\n\t}\r\n\r\n\taddBarrier(id, options) {\r\n\t\tlet barrier = Barrier.create(id, options);\r\n\r\n\t\tfor (var i = 0; i < barrier.vertices.length; i++) {\r\n\t\t\tlet vertex = barrier.vertices[i];\r\n\t\t\tlet nextVertex = barrier.vertices[i + 1 == barrier.vertices.length ? 0 : i + 1];\r\n\t\t\tthis.sight.addBarrier(vertex.x, vertex.y, nextVertex.x, nextVertex.y);\r\n\t\t}\r\n\r\n\t\tthis.barriers.push(barrier);\r\n\t\treturn barrier;\r\n\t}\r\n\r\n\tremoveBarrier(id) {\r\n\t\tlet barrier = this.getBarrier(id);\r\n\t\tif (barrier) {\r\n\t\t\tthis.barriers.splice(this.barriers.indexOf(barrier), 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcreate: function(id, options) {\r\n\t\treturn new Room(id, options);\r\n\t}\r\n};\n\n//# sourceURL=webpack:///./src/client/js/classes/room.js?')},"./src/client/js/classes/zombie.js":function(module,exports,__webpack_require__){eval('const shape = __webpack_require__(/*! ../../../../lib/shape.js */ "./lib/shape.js");\r\n\r\nconst zombieImg = new Image();\r\nzombieImg.src = "assets/images/zombie.png";\r\nclass Zombie {\r\n\tconstructor(id, options) {\r\n\t\tthis.id = id;\r\n\t\tthis.position = options.position;\r\n\t\tthis.serverPosition = this.position.copy();\r\n\t\tthis.radius = options.radius;\r\n\t\tthis.angle = options.angle;\r\n\t\tthis.shape = shape.polygon(this.position.x, this.position.y, this.radius, 16);\r\n\t\t//this.shape.scale(2, 1);\r\n\t}\r\n\r\n\trender(renderer) {\r\n\t\trenderer.save();\r\n\t\trenderer.context.translate(this.position.x, this.position.y);\r\n\t\trenderer.context.rotate(this.position.heading(this.serverPosition));\r\n\t\tlet size = this.radius * 0.024;\r\n\t\trenderer.context.scale(size, size);\r\n\t\trenderer.context.drawImage(zombieImg, -zombieImg.width / 2 + 15, -zombieImg.height / 2);\r\n\t\trenderer.restore();\r\n\r\n\t\t/*renderer.circle(this.position.x, this.position.y, this.radius, {\r\n\t\t\tfill: "white"\r\n\t\t});*/\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.position.lerp(this.serverPosition, 0.2);\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcreate: function (id, options) {\r\n\t\treturn new Zombie(id, options);\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/client/js/classes/zombie.js?')},"./src/client/js/client.js":function(module,exports,__webpack_require__){eval('const io = __webpack_require__(/*! socket.io-client */ "./node_modules/socket.io-client/build/index.js");\r\n\r\nclass Client {\r\n\tconstructor() {\r\n\t\tthis.socket = io();\r\n\t\tthis.roomId = null;\r\n\r\n\t\tthis.socket.on("connect", () => {\r\n\r\n\t\t});\r\n\t}\r\n\r\n\tsetMouse(x, y) {\r\n\t\tif (this.roomId) {\r\n\t\t\tthis.socket.emit("client:game:mouse", this.roomId, x, y);\r\n\t\t}\r\n\t}\r\n\r\n\tsetPosition(x, y) {\r\n\t\tif (this.roomId) {\r\n\t\t\tthis.socket.emit("client:game:position", this.roomId, x, y);\r\n\t\t}\r\n\t}\r\n\r\n\tshoot() {\r\n\t\tif (this.roomId) {\r\n\t\t\tthis.socket.emit("client:game:shoot", this.roomId);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveUp() {\r\n\t\tif (this.roomId) {\r\n\t\t\tthis.socket.emit("client:game:move:up", this.roomId);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveRight() {\r\n\t\tif (this.roomId) {\r\n\t\t\tthis.socket.emit("client:game:move:right", this.roomId);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveDown() {\r\n\t\tif (this.roomId) {\r\n\t\t\tthis.socket.emit("client:game:move:down", this.roomId);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveLeft() {\r\n\t\tif (this.roomId) {\r\n\t\t\tthis.socket.emit("client:game:move:left", this.roomId);\r\n\t\t}\r\n\t}\r\n\r\n\tsendChat(name, message) {\r\n\t\tthis.socket.emit("client:message:lobby", name, message);\r\n\t}\r\n\r\n\tvalidateRegister(username, password) {\r\n\t\tthis.socket.emit("client:register:validate", username, password);\r\n\t}\r\n\r\n\tvalidateLogin(username, password) {\r\n\t\tthis.socket.emit("client:login:validate", username, password);\r\n\t}\r\n\r\n\tregister(username, password) {\r\n\t\tthis.socket.emit("client:register", username, password);\r\n\t}\r\n\r\n\tlogin(id) {\r\n\t\tthis.socket.emit("client:login", id);\r\n\t}\r\n\r\n\tvalidateCodename(codename) {\r\n\t\tthis.socket.emit("client:codename:validate", codename);\r\n\t}\r\n\r\n\tsetCodename(codename) {\r\n\t\tif (!this.id) console.warn("Client ID is not defined");\r\n\t\tthis.socket.emit("client:codename", this.id, codename);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tif (!this.id) console.warn("Client ID is not defined");\r\n\t\tthis.socket.emit("client:logout", this.id);\r\n\t}\r\n\r\n\tcreateRoom(description, waves, password) {\r\n\t\tthis.socket.emit("client:create:room", description, waves, password);\r\n\t}\r\n\r\n\tjoin(roomId) {\r\n\t\tthis.socket.emit("client:room:join", roomId);\r\n\t\tthis.roomId = roomId;\r\n\t}\r\n\r\n\tleave() {\r\n\t\tthis.socket.emit("client:room:leave", this.roomId);\r\n\t}\r\n}\r\n\r\nconst client = new Client();\r\n\r\nmodule.exports = client;\n\n//# sourceURL=webpack:///./src/client/js/client.js?')},"./src/client/js/vue/dialog.js":function(module,exports,__webpack_require__){eval('const dialogApp = new Vue({\r\n\tel: "#dialogApp",\r\n\tdata: {\r\n\t\thidden: true,\r\n\t\tinputHidden: true,\r\n\t\terrorHidden: true,\r\n\t\tproceedHidden: false,\r\n\t\tcancelHidden: true,\r\n\t\ttitle: "Title",\r\n\t\tdescription: "Description",\r\n\t\tproceedText: "Accept",\r\n\t\tcancelText: "Decline",\r\n\t\terror: ""\r\n\t},\r\n\tmethods: {\r\n\t\tproceed: function() {},\r\n\t\tcancel: function() {},\r\n\t\tshow: function(options) {\r\n\t\t\toptions = options || {};\r\n\t\t\tdialogApp.title = options.title;\r\n\t\t\tdialogApp.description = options.description;\r\n\t\t\tdialogApp.proceedText = options.proceedText;\r\n\t\t\tdialogApp.cancelText = options.cancelText;\r\n\t\t\tdialogApp.proceedHidden = options.proceedHidden || false;\r\n\t\t\tdialogApp.cancelHidden = options.cancelHidden || false;\r\n\t\t\tdialogApp.inputHidden = options.inputHidden || false;\r\n\t\t\tdialogApp.hidden = false;\r\n\r\n\t\t\tif (typeof options.proceedFunction == "function") {\r\n\t\t\t\tdialogApp.proceed = options.proceedFunction;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof options.cancelFunction == "function") {\r\n\t\t\t\tdialogApp.cancel = options.cancelFunction;\r\n\t\t\t}\r\n\r\n\t\t\t__webpack_require__(/*! ./overlay.js */ "./src/client/js/vue/overlay.js").hidden = false;\r\n\t\t},\r\n\t\ttoggleCenter: function(id, center) {\r\n\t\t\tlet checkState = setInterval(function() {\r\n\t\t\t\tlet button = document.getElementById(id);\r\n\t\t\t\tif (button) {\r\n\t\t\t\t\tif (center) button.classList.add("center");\r\n\t\t\t\t\telse button.classList.remove("center");\r\n\t\t\t\t\tclearInterval(checkState);\r\n\t\t\t\t}\r\n\t\t\t}, 10);\r\n\t\t},\r\n\t\tshowError: function(message) {\r\n\t\t\tdialogApp.errorHidden = false;\r\n\t\t\tdialogApp.error = message;\r\n\t\t},\r\n\t\thide: function() {\r\n\t\t\tdialogApp.hidden = true;\r\n\t\t\t__webpack_require__(/*! ./overlay.js */ "./src/client/js/vue/overlay.js").hidden = true;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nmodule.exports = dialogApp;\n\n//# sourceURL=webpack:///./src/client/js/vue/dialog.js?')},"./src/client/js/vue/load.js":function(module,exports){eval('var loadApp = new Vue({\r\n\tel: "#loadScreen",\r\n\tdata: {\r\n\t\thidden: true\r\n\t}\r\n});\r\n\r\nmodule.exports = loadApp;\n\n//# sourceURL=webpack:///./src/client/js/vue/load.js?')},"./src/client/js/vue/lobby.js":function(module,exports,__webpack_require__){eval('const config = __webpack_require__(/*! ../../../../lib/config.js */ "./lib/config.js");\r\nconst client = __webpack_require__(/*! ./../client.js */ "./src/client/js/client.js");\r\n\r\nconst lobbyApp = new Vue({\r\n\tel: "#lobbyApp",\r\n\tdata: {\r\n\t\troom: {\r\n\t\t\tsidebar: "#playerListWrapper",\r\n\t\t\tmain: "#roomListWrapper"\r\n\t\t},\r\n\t\tchat: {\r\n\t\t\tsidebar: "#friendListWrapper",\r\n\t\t\tmain: "#chatWrapper"\r\n\t\t},\r\n\t\thidden: true\r\n\t},\r\n\tmethods: {\r\n\t\ttoggleSidebar: function(id) {\r\n\t\t\tlet el = document.querySelector(id);\r\n\t\t\tel.classList.toggle("hideSidebar");\r\n\t\t\tel.classList.toggle("showSidebar");\r\n\t\t},\r\n\t\tsendChat: function() {\r\n\t\t\tlet message = composeMessage.value;\r\n\r\n\t\t\tif (!message.length) return;\r\n\r\n\t\t\tcomposeMessage.value = "";\r\n\t\t\tclient.sendChat(client.codename, message);\r\n\t\t},\r\n\t\tlogout: function() {\r\n\t\t\t__webpack_require__(/*! ./dialog.js */ "./src/client/js/vue/dialog.js").show({\r\n\t\t\t\ttitle: "Logout",\r\n\t\t\t\tdescription: "Are you sure?",\r\n\t\t\t\tproceedText: "Yes",\r\n\t\t\t\tcancelText: "Back",\r\n\t\t\t\tinputHidden: true,\r\n\t\t\t\tproceedFunction: function() {\r\n\t\t\t\t\tclient.logout();\r\n\t\t\t\t\tif (sessionStorage[config.sessionKey]) delete sessionStorage[config.sessionKey];\r\n\t\t\t\t\t__webpack_require__(/*! ./dialog.js */ "./src/client/js/vue/dialog.js").hide();\r\n\t\t\t\t\t__webpack_require__(/*! ./login.js */ "./src/client/js/vue/login.js").hidden = false;\r\n\t\t\t\t\tlobbyApp.hidden = true;\r\n\t\t\t\t},\r\n\t\t\t\tcancelFunction: function() {\r\n\t\t\t\t\t__webpack_require__(/*! ./dialog.js */ "./src/client/js/vue/dialog.js").hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t__webpack_require__(/*! ./overlay.js */ "./src/client/js/vue/overlay.js").hidden = false;\r\n\t\t},\r\n\t\tcreateRoom: function() {\r\n\t\t\t__webpack_require__(/*! ./room.js */ "./src/client/js/vue/room.js").hidden = false;\r\n\t\t\t__webpack_require__(/*! ./overlay.js */ "./src/client/js/vue/overlay.js").hidden = false;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nmodule.exports = lobbyApp;\n\n//# sourceURL=webpack:///./src/client/js/vue/lobby.js?')},"./src/client/js/vue/login.js":function(module,exports,__webpack_require__){eval('const client = __webpack_require__(/*! ./../client.js */ "./src/client/js/client.js");\r\nconst config = __webpack_require__(/*! ../../../../lib/config.js */ "./lib/config.js");\r\n\r\nconst loginApp = new Vue({\r\n\tel: "#loginApp",\r\n\tdata: {\r\n\t\thidden: false,\r\n\t\tusernameError: false,\r\n\t\tpasswordError: false,\r\n\t\tusernameMessage: "",\r\n\t\tpasswordMessage: ""\r\n\t},\r\n\tmethods: {\r\n\t\tregister: function() {\r\n\t\t\tloginApp.hidden = true;\r\n\t\t\tloginApp.usernameError = false;\r\n\t\t\tloginApp.passwordError = false;\r\n\t\t\t__webpack_require__(/*! ./register.js */ "./src/client/js/vue/register.js").hidden = false;\r\n\t\t},\r\n\t\tvalidate: function() {\r\n\t\t\tlet un = username.value;\r\n\t\t\tlet pw = password.value;\r\n\r\n\t\t\tif (un.length < 4) {\r\n\t\t\t\tloginApp.usernameError = true;\r\n\t\t\t\tloginApp.passwordMessage = config.warnMessages.short;\r\n\t\t\t}\r\n\r\n\t\t\tif (!un.length) {\r\n\t\t\t\tloginApp.usernameError = true;\r\n\t\t\t\tloginApp.usernameMessage = config.warnMessages.blank;\r\n\t\t\t}\r\n\r\n\t\t\tif (pw.length < 6) {\r\n\t\t\t\tloginApp.passwordError = true;\r\n\t\t\t\tloginApp.passwordMessage = config.warnMessages.short;\r\n\t\t\t}\r\n\r\n\t\t\tif (!pw.length) {\r\n\t\t\t\tloginApp.passwordError = true;\r\n\t\t\t\tloginApp.passwordMessage = config.warnMessages.blank;\r\n\t\t\t}\r\n\r\n\t\t\tif (un.length >= 4 && pw.length >= 6 && un.length && pw.length) {\r\n\t\t\t\tclient.validateLogin(un, pw);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nmodule.exports = loginApp;\n\n//# sourceURL=webpack:///./src/client/js/vue/login.js?')},"./src/client/js/vue/overlay.js":function(module,exports){eval('const overlay = new Vue({\r\n\tel: "#overlay",\r\n\tdata: {\r\n\t\thidden: true\r\n\t}\r\n});\r\n\r\nmodule.exports = overlay;\n\n//# sourceURL=webpack:///./src/client/js/vue/overlay.js?')},"./src/client/js/vue/register.js":function(module,exports,__webpack_require__){eval('const config = __webpack_require__(/*! ../../../../lib/config.js */ "./lib/config.js");\r\nconst client = __webpack_require__(/*! ./../client.js */ "./src/client/js/client.js");\r\n\r\nvar registerApp = new Vue({\r\n\tel: "#registerApp",\r\n\tdata: {\r\n\t\thidden: true,\r\n\t\tusernameError: false,\r\n\t\tpasswordError: false,\r\n\t\tcpasswordError: false,\r\n\t\tusernameMessage: "",\r\n\t\tpasswordMessage: "",\r\n\t\tconfirmMessage: ""\r\n\t},\r\n\tmethods: {\r\n\t\tlogin: function() {\r\n\t\t\tregisterApp.hidden = true;\r\n\t\t\tregisterApp.usernameError = false;\r\n\t\t\tregisterApp.passwordError = false;\r\n\t\t\tregisterApp.cpasswordError = false;\r\n\t\t\t__webpack_require__(/*! ./login.js */ "./src/client/js/vue/login.js").hidden = false;\r\n\t\t},\r\n\t\tvalidate: function() {\r\n\t\t\tlet un = rusername.value;\r\n\t\t\tlet pw = rpassword.value;\r\n\t\t\tlet cpw = cpassword.value;\r\n\r\n\t\t\tregisterApp.usernameError = false;\r\n\t\t\tregisterApp.passwordError = false;\r\n\t\t\tregisterApp.cpasswordError = false;\r\n\r\n\t\t\tif (un.length < 4) {\r\n\t\t\t\tregisterApp.usernameError = true;\r\n\t\t\t\tregisterApp.usernameMessage = config.warnMessages.short;\r\n\t\t\t}\r\n\r\n\t\t\tif (!un.length) {\r\n\t\t\t\tregisterApp.usernameError = true;\r\n\t\t\t\tregisterApp.usernameMessage = config.warnMessages.blank;\r\n\t\t\t}\r\n\r\n\t\t\tif (pw.length < 6) {\r\n\t\t\t\tregisterApp.passwordError = true;\r\n\t\t\t\tregisterApp.passwordMessage = config.warnMessages.short;\r\n\t\t\t}\r\n\r\n\t\t\tif (!pw.length) {\r\n\t\t\t\tregisterApp.passwordError = true;\r\n\t\t\t\tregisterApp.passwordMessage = config.warnMessages.blank;\r\n\t\t\t}\r\n\r\n\t\t\tif (cpw.length < 6) {\r\n\t\t\t\tregisterApp.cpasswordError = true;\r\n\t\t\t\tregisterApp.confirmMessage = config.warnMessages.short;\r\n\t\t\t}\r\n\r\n\t\t\tif (!cpw.length) {\r\n\t\t\t\tregisterApp.cpasswordError = true;\r\n\t\t\t\tregisterApp.confirmMessage = config.warnMessages.blank;\r\n\t\t\t}\r\n\r\n\t\t\tif (pw !== cpw) {\r\n\t\t\t\tregisterApp.cpasswordError = true;\r\n\t\t\t\tregisterApp.confirmMessage = config.warnMessages.unmatchedPassword;\r\n\t\t\t}\r\n\r\n\t\t\tif (un.length >= 4 && pw.length >= 6 && cpw.length >= 6 && un.length && pw.length && cpw.length && pw === cpw) {\r\n\t\t\t\tclient.validateRegister(un, pw);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nmodule.exports = registerApp;\n\n//# sourceURL=webpack:///./src/client/js/vue/register.js?')},"./src/client/js/vue/room.js":function(module,exports,__webpack_require__){eval('const config = __webpack_require__(/*! ../../../../lib/config.js */ "./lib/config.js");\r\nconst client = __webpack_require__(/*! ./../client.js */ "./src/client/js/client.js");\r\n\r\nconst roomApp = new Vue({\r\n\tel: "#roomApp",\r\n\tdata: {\r\n\t\thidden: true,\r\n\t\tdescriptionErrorHidden: true,\r\n\t\twaveErrorHidden: true,\r\n\t\tdescriptionError: "",\r\n\t\twaveError: ""\r\n\t},\r\n\tmethods: {\r\n\t\tclose: function() {\r\n\t\t\troomApp.hidden = true;\r\n\t\t\t__webpack_require__(/*! ./overlay.js */ "./src/client/js/vue/overlay.js").hidden = true;\r\n\t\t},\r\n\t\tjoin: function() {\r\n\t\t\tlet description = document.getElementById("roomDescription").value;\r\n\t\t\tlet waves = parseInt(document.getElementById("roomWaves").value);\r\n\t\t\tlet password = document.getElementById("roomPassword").value;\r\n\t\t\troomApp.waveErrorHidden = true;\r\n\r\n\t\t\tif (waves > config.maxWaves) {\r\n\t\t\t\troomApp.waveError = `— Max is ${config.maxWaves}`;\r\n\t\t\t\troomApp.waveErrorHidden = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (waves < config.minWaves) {\r\n\t\t\t\troomApp.waveError = `— Min is ${config.minWaves}`;\r\n\t\t\t\troomApp.waveErrorHidden = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tclient.createRoom(description, waves, password);\r\n\r\n\t\t\troomApp.hidden = true;\r\n\t\t\t__webpack_require__(/*! ./load.js */ "./src/client/js/vue/load.js").hidden = false;\r\n\t\t},\r\n\t\tvalidateFormat: function(e) {\r\n\t\t\tif (e.keyCode != 8 & e.keyCode != 46) {\r\n\t\t\t\tlet nums = new RegExp("[0-9]");\r\n\t\t\t\tif (!nums.test(e.key)) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tvalidateAmount: function() {\r\n\t\t\troomApp.validateMin();\r\n\t\t\troomApp.validateMax();\r\n\t\t},\r\n\t\tvalidateMax: function(e) {\r\n\t\t\tlet value = document.getElementById("roomWaves").value;\r\n\t\t\tif (parseInt(value) > config.maxWaves) {\r\n\t\t\t\tdocument.getElementById("roomWaves").value = config.maxWaves.toString();\r\n\t\t\t}\r\n\t\t},\r\n\t\tvalidateMin: function(e) {\r\n\t\t\tlet value = document.getElementById("roomWaves").value;\r\n\t\t\tif (parseInt(value) < config.minWaves) {\r\n\t\t\t\tdocument.getElementById("roomWaves").value = config.minWaves.toString();\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoggleAmount: function(e) {\r\n\t\t\tlet isDown = e.wheelDeltaY < 0;\r\n\t\t\tlet value = parseInt(document.getElementById("roomWaves").value);\r\n\t\t\tif (isDown) {\r\n\t\t\t\tvalue--;\r\n\t\t\t} else {\r\n\t\t\t\tvalue++;\r\n\t\t\t}\r\n\t\t\tdocument.getElementById("roomWaves").value = value.toString();\r\n\r\n\t\t\troomApp.validateAmount();\r\n\t\t},\r\n\t\tvalidateDescription: function(e) {\r\n\t\t\tlet value = document.getElementById("roomDescription").value;\r\n\t\t\tif (value.length > 30) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nmodule.exports = roomApp;\n\n//# sourceURL=webpack:///./src/client/js/vue/room.js?')},"./src/client/js/vue/utils.js":function(module,exports,__webpack_require__){eval('const config = __webpack_require__(/*! ../../../../lib/config.js */ "./lib/config.js");\r\nconst loginApp = __webpack_require__(/*! ./login.js */ "./src/client/js/vue/login.js");\r\nconst registerApp = __webpack_require__(/*! ./register.js */ "./src/client/js/vue/register.js");\r\nconst lobbyApp = __webpack_require__(/*! ./lobby.js */ "./src/client/js/vue/lobby.js");\r\nconst roomApp = __webpack_require__(/*! ./room.js */ "./src/client/js/vue/room.js");\r\nconst dialogApp = __webpack_require__(/*! ./dialog.js */ "./src/client/js/vue/dialog.js");\r\nconst overlay = __webpack_require__(/*! ./overlay.js */ "./src/client/js/vue/overlay.js");\r\nconst loadApp = __webpack_require__(/*! ./load.js */ "./src/client/js/vue/load.js");\r\nconst client = __webpack_require__(/*! ./../client.js */ "./src/client/js/client.js");\r\n\r\nconst utils = {\r\n\tshowGame: function() {\r\n\t\tlet canvas = document.getElementById("gameCanvas");\r\n\t\tlet ui = document.getElementById("gameApp");\r\n\t\tcanvas.style.display = "block";\r\n\t\tui.style.display = "none";\r\n\t},\r\n\thideGame: function() {\r\n\t\tlet canvas = document.getElementById("gameCanvas");\r\n\t\tlet ui = document.getElementById("gameApp");\r\n\t\tcanvas.style.display = "none";\r\n\t\tui.style.display = "block";\r\n\t},\r\n\tshowApp: function(_app) {\r\n\t\tif (_app == loginApp) loginApp.hidden = false;\r\n\t\telse loginApp.hidden = true;\r\n\t\tif (_app == registerApp) registerApp.hidden = false;\r\n\t\telse registerApp.hidden = true;\r\n\t\tif (_app == lobbyApp) lobbyApp.hidden = false;\r\n\t\telse lobbyApp.hidden = true;\r\n\t\tif (_app == roomApp) roomApp.hidden = false;\r\n\t\telse roomApp.hidden = true;\r\n\t\tif (_app == dialogApp) dialogApp.hidden = false;\r\n\t\telse dialogApp.hidden = true;\r\n\t\tif (_app == overlay) overlay.hidden = false;\r\n\t\telse overlay.hidden = true;\r\n\t\tif (_app == loadApp) loadApp.hidden = false;\r\n\t\telse loadApp.hidden = true;\r\n\t},\r\n\taddRoom: function(options) {\r\n\t\tif (!lobbyApp.hidden) {\r\n\t\t\tlet numberWrapper = document.createElement("div");\r\n\t\t\tnumberWrapper.classList.add("roomDetail");\r\n\t\t\tnumberWrapper.dataset.colname = "number";\r\n\r\n\t\t\tlet numberContent = document.createElement("div");\r\n\t\t\tnumberContent.classList.add("content");\r\n\r\n\t\t\tlet numberIcon = document.createElement("img");\r\n\t\t\tnumberIcon.src = "assets/svg/hash.svg";\r\n\r\n\t\t\tlet numberText = document.createElement("p");\r\n\t\t\tnumberText.innerHTML = "&nbsp;"\r\n\t\t\tnumberText.innerText = options.index;\r\n\r\n\t\t\tnumberContent.appendChild(numberIcon);\r\n\t\t\tnumberContent.appendChild(numberText);\r\n\t\t\tnumberWrapper.appendChild(numberContent);\r\n\r\n\t\t\tlet descriptionWrapper = document.createElement("div");\r\n\t\t\tdescriptionWrapper.classList.add("roomDetail");\r\n\t\t\tdescriptionWrapper.dataset.colname = "description";\r\n\r\n\t\t\tlet descriptionContent = document.createElement("div");\r\n\t\t\tdescriptionContent.classList.add("content");\r\n\r\n\t\t\tlet descriptionIcon = document.createElement("img");\r\n\t\t\tdescriptionIcon.src = "assets/svg/message.svg";\r\n\r\n\t\t\tlet descriptionText = document.createElement("p");\r\n\t\t\tdescriptionText.innerHTML = "&nbsp;"\r\n\t\t\tdescriptionText.innerText = options.description;\r\n\r\n\t\t\tdescriptionContent.appendChild(descriptionIcon);\r\n\t\t\tdescriptionContent.appendChild(descriptionText);\r\n\t\t\tdescriptionWrapper.appendChild(descriptionContent);\r\n\r\n\t\t\tlet waveWrapper = document.createElement("div");\r\n\t\t\twaveWrapper.classList.add("roomDetail");\r\n\t\t\twaveWrapper.dataset.colname = "wave";\r\n\r\n\t\t\tlet waveContent = document.createElement("div");\r\n\t\t\twaveContent.classList.add("content");\r\n\r\n\t\t\tlet waveIcon = document.createElement("img");\r\n\t\t\twaveIcon.src = "assets/svg/shield-hash.svg";\r\n\r\n\t\t\tlet waveText = document.createElement("p");\r\n\t\t\twaveText.innerHTML = "&nbsp;"\r\n\t\t\twaveText.innerText = `${options.currentWave}/${options.maxWave}`;\r\n\r\n\t\t\twaveContent.appendChild(waveIcon);\r\n\t\t\twaveContent.appendChild(waveText);\r\n\t\t\twaveWrapper.appendChild(waveContent);\r\n\r\n\t\t\tlet playersWrapper = document.createElement("div");\r\n\t\t\tplayersWrapper.classList.add("roomDetail");\r\n\t\t\tplayersWrapper.dataset.colname = "players";\r\n\r\n\t\t\tlet playersContent = document.createElement("div");\r\n\t\t\tplayersContent.classList.add("content");\r\n\r\n\t\t\tlet playersIcon = document.createElement("img");\r\n\t\t\tplayersIcon.src = "assets/svg/person.svg";\r\n\r\n\t\t\tlet playersText = document.createElement("p");\r\n\t\t\tplayersText.innerHTML = "&nbsp;"\r\n\t\t\tplayersText.innerText = `${options.playerCount}/${100}`;\r\n\r\n\t\t\tplayersContent.appendChild(playersIcon);\r\n\t\t\tplayersContent.appendChild(playersText);\r\n\t\t\tplayersWrapper.appendChild(playersContent);\r\n\r\n\t\t\tlet roomWrapper = document.createElement("div");\r\n\t\t\troomWrapper.dataset.id = options.id;\r\n\t\t\troomWrapper.classList.add("roomWrapper", "glass-2");\r\n\t\t\troomWrapper.appendChild(numberWrapper);\r\n\t\t\troomWrapper.appendChild(descriptionWrapper);\r\n\t\t\troomWrapper.appendChild(waveWrapper);\r\n\t\t\troomWrapper.appendChild(playersWrapper);\r\n\r\n\t\t\tlet list = document.getElementById("roomListWrapper");\r\n\t\t\tlist.appendChild(roomWrapper);\r\n\r\n\t\t\troomWrapper.addEventListener("click", function() {\r\n\t\t\t\tdialogApp.show({\r\n\t\t\t\t\ttitle: "Join room",\r\n\t\t\t\t\tdescription: "Are you sure?",\r\n\t\t\t\t\tproceedText: "Join",\r\n\t\t\t\t\tcancelText: "Back",\r\n\t\t\t\t\tinputHidden: true,\r\n\t\t\t\t\tproceedFunction: function() {\r\n\t\t\t\t\t\tclient.join(options.id);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcancelFunction: function() {\r\n\t\t\t\t\t\tdialogApp.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tcreateLobbyMessage: function(name, message) {\r\n\t\tif (!lobbyApp.hidden) {\r\n\t\t\tlet elWrapper = document.createElement("div");\r\n\t\t\telWrapper.classList.add("messageWrapper");\r\n\t\t\tlet elMessage = document.createElement("p");\r\n\t\t\telMessage.innerText = `${name}: ${message}`;\r\n\t\t\telWrapper.appendChild(elMessage);\r\n\t\t\tlet parent = document.getElementById("textAreaWrapper");\r\n\t\t\tparent.appendChild(elWrapper);\r\n\r\n\t\t\tlet allMessages = parent.children;\r\n\t\t\tif (allMessages.length > config.maxMessageHistory) {\r\n\t\t\t\tallMessages[0].remove();\r\n\t\t\t}\r\n\r\n\t\t\tparent.scrollTop = parent.scrollHeight;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nmodule.exports = utils;\n\n//# sourceURL=webpack:///./src/client/js/vue/utils.js?')},"./src/client/js/vue/vue.js":function(module,exports,__webpack_require__){eval('const client = __webpack_require__(/*! ./../client.js */ "./src/client/js/client.js");\r\nconst config = __webpack_require__(/*! ../../../../lib/config.js */ "./lib/config.js");\r\nconst utils = __webpack_require__(/*! ./utils.js */ "./src/client/js/vue/utils.js");\r\nconst loginApp = __webpack_require__(/*! ./login.js */ "./src/client/js/vue/login.js");\r\nconst registerApp = __webpack_require__(/*! ./register.js */ "./src/client/js/vue/register.js");\r\nconst lobbyApp = __webpack_require__(/*! ./lobby.js */ "./src/client/js/vue/lobby.js");\r\nconst roomApp = __webpack_require__(/*! ./room.js */ "./src/client/js/vue/room.js");\r\nconst dialogApp = __webpack_require__(/*! ./dialog.js */ "./src/client/js/vue/dialog.js");\r\nconst overlay = __webpack_require__(/*! ./overlay.js */ "./src/client/js/vue/overlay.js");\r\nconst loadApp = __webpack_require__(/*! ./load.js */ "./src/client/js/vue/load.js");\r\n\r\nlet setCodename = false;\r\n\r\nclient.socket.on("client:room:enter", () => {\r\n\toverlay.hidden = true;\r\n\tutils.showApp("");\r\n\tutils.showGame();\r\n});\r\n\r\nclient.socket.on("room:delete", roomId => {\r\n\tlet el = document.querySelector(`[data-id=\'${roomId}\']`);\r\n\tif (el) {\r\n\t\tel.remove();\r\n\t}\r\n});\r\n\r\nclient.socket.on("client:lobby:room:update", room => {\r\n\tlet roomElements = document.querySelectorAll(".roomWrapper");\r\n\tlet existingIds = [];\r\n\tfor (let roomEl of roomElements) {\r\n\t\texistingIds.push(roomEl.dataset.id);\r\n\t}\r\n\r\n\tif (existingIds.includes(room.id)) {\r\n\t\tlet element = document.querySelector(`[data-id=\'${room.id}\']`);\r\n\t\tlet children = element.children;\r\n\t\tfor (let child of children) {\r\n\t\t\tif (child.dataset.colname == "number") {\r\n\t\t\t\tchild.getElementsByTagName("p")[0].innerText = room.index;\r\n\t\t\t} else if (child.dataset.colname == "description") {\r\n\t\t\t\tchild.getElementsByTagName("p")[0].innerText = room.description;\r\n\t\t\t} else if (child.dataset.colname == "wave") {\r\n\t\t\t\tchild.getElementsByTagName("p")[0].innerText = `${room.currentWave}/${room.maxWave}`;\r\n\t\t\t} else if (child.dataset.colname == "players") {\r\n\t\t\t\tchild.getElementsByTagName("p")[0].innerText = `${room.players.length}/${config.maxPlayers}`;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tutils.addRoom(room);\r\n\t}\r\n});\r\n\r\nclient.socket.on("client:join", roomId => {\r\n\tclient.join(roomId);\r\n});\r\n\r\nclient.socket.on("message:lobby", (name, message) => {\r\n\tutils.createLobbyMessage(name, message);\r\n});\r\n\r\nclient.socket.on("client:register:error", error => {\r\n\tif (error == "duplicate") {\r\n\t\tregisterApp.usernameError = true;\r\n\t\tregisterApp.usernameMessage = config.warnMessages.taken;\r\n\t}\r\n});\r\n\r\nclient.socket.on("client:register:success", (un, pw) => {\r\n\tregisterApp.login();\r\n\tclient.register(un, pw);\r\n});\r\n\r\nclient.socket.on("client:login:error", error => {\r\n\tif (error == "unknown") {\r\n\t\tif (!document.getElementById("username").value.length) return;\r\n\t\tloginApp.usernameError = true;\r\n\t\tloginApp.usernameMessage = config.warnMessages.unknown;\r\n\t\tloginApp.passwordError = false;\r\n\t} else if (error == "incorrect") {\r\n\t\tif (!document.getElementById("password").value.length) return;\r\n\t\tloginApp.passwordError = true;\r\n\t\tloginApp.passwordMessage = config.warnMessages.incorrectPassword;\r\n\t}\r\n});\r\n\r\nclient.socket.on("client:login:success", id => {\r\n\tutils.showApp(loadApp);\r\n\tclient.login(id);\r\n});\r\n\r\nclient.socket.on("client:codename:error", error => {\r\n\tif (error == "duplicate") {\r\n\t\tdialogApp.showError("This name is already taken");\r\n\t}\r\n});\r\n\r\nclient.socket.on("client:codename:success", codename => {\r\n\tdialogApp.errorHidden = true;\r\n\tdialogApp.error = "";\r\n\r\n\tif (setCodename) {\r\n\t\tclient.setCodename(codename);\r\n\t\tclient.codename = codename;\r\n\t\tdialogApp.hide();\r\n\t}\r\n});\r\n\r\nclient.socket.on("client:load", data => {\r\n\tutils.showApp(lobbyApp);\r\n\tlet keys = Object.keys(data);\r\n\tfor (let key of keys) {\r\n\t\tclient[key] = data[key];\r\n\t}\r\n\r\n\t//Ask the user for a codename if it doesn\'t have one yet\r\n\tif (client.codename === "") {\r\n\t\tfunction validateCodename(codename, callback) {\r\n\t\t\tdialogApp.errorHidden = true;\r\n\t\t\tdialogApp.error = "";\r\n\r\n\t\t\tif (codename.length < 4) {\r\n\t\t\t\tdialogApp.showError("That\'s too short");\r\n\t\t\t}\r\n\r\n\t\t\tif (!codename.length) {\r\n\t\t\t\tdialogApp.showError("This field is required");\r\n\t\t\t}\r\n\r\n\t\t\tif (!codename.length || codename.length < 4) return;\r\n\r\n\t\t\tclient.validateCodename(codename);\r\n\t\t}\r\n\r\n\t\tdialogApp.show({\r\n\t\t\ttitle: "Name",\r\n\t\t\tdescription: "What would you like others to call you?",\r\n\t\t\tproceedText: "Continue",\r\n\t\t\tcancelText: "Check",\r\n\t\t\tinputHidden: false,\r\n\t\t\tcancelHidden: false,\r\n\t\t\tproceedFunction: function() {\r\n\t\t\t\tlet codename = document.getElementById("dialogInput").value;\r\n\t\t\t\tvalidateCodename(codename);\r\n\t\t\t\tsetCodename = true;\r\n\t\t\t},\r\n\t\t\tcancelFunction: function() {\r\n\t\t\t\tsetCodename = false;\r\n\t\t\t\tlet codename = document.getElementById("dialogInput").value;\r\n\t\t\t\tvalidateCodename(codename);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsessionStorage.setItem(config.sessionKey, data.id);\r\n\r\n\tconsole.log(client);\r\n});\r\n\r\n//Load session\r\nwindow.onload = function() {\r\n\tif (sessionStorage[config.sessionKey]) {\r\n\t\tclient.login(sessionStorage[config.sessionKey]);\r\n\t} else {\r\n\t\tutils.showApp(loginApp);\r\n\t\tconsole.log("Session has expired. Please login again");\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack:///./src/client/js/vue/vue.js?')},"./src/client/lib/camera.js":function(module,exports){eval('function lerp(start, stop, per) {\r\n\treturn per * (stop - start) + start;\r\n}\r\n\r\n/*\r\n*Modified version of robashton\'s camera\r\n*Repository link:\r\n*https://github.com/robashton/camera\r\n*/\r\n\r\nclass Camera2D {\r\n\tconstructor(context, options) {\r\n\t\toptions = options || {};\r\n\t\tthis.movement = {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tthis.viewport = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t\tscale: [1.0, 1.0]\r\n\t\t};\r\n\r\n\t\tthis.distance = 0;\r\n\t\tthis.context = context || null;\r\n\t\tthis.fieldOfView = options.fieldOfView || Math.PI / 4.0;\r\n\t\tthis.moveSpeed = options.moveSpeed || 1;\r\n\t\tthis.zoomSpeed = options.zoomSpeed || 1;\r\n\t\tthis.scaleSpeed = options.scaleSpeed || 1;\r\n\t}\r\n\r\n\tsetContext(context) {\r\n\t\tthis.context = context;\r\n\t\tthis.updateViewport();\r\n\t}\r\n\r\n\tsetMoveSpeed(speed) {\r\n\t\tthis.moveSpeed = speed;\r\n\t}\r\n\r\n\tsetZoomSpeed(speed) {\r\n\t\tthis.zoomSpeed = speed;\r\n\t}\r\n\r\n\tsetScaleSpeed(speed) {\r\n\t\tthis.scaleSpeed = speed;\r\n\t}\r\n\r\n\tbegin(f) {\r\n\t\tif (typeof f != "function") return;\r\n\t\tthis.context.save();\r\n\t\tthis.applyScale();\r\n\t\tthis.applyTranslation();\r\n\t\tf(this);\r\n\t\tthis.context.restore();\r\n\t}\r\n\r\n\tapplyScale() {\r\n\t\tthis.context.scale(this.viewport.scale[0], this.viewport.scale[1]);\r\n\t}\r\n\r\n\tapplyTranslation() {\r\n\t\tthis.context.translate(-this.viewport.left, -this.viewport.top);\r\n\t}\r\n\r\n\tupdateViewport() {\r\n\t\tthis.aspectRatio = this.context.canvas.width / this.context.canvas.height;\r\n\t\tthis.viewport.width = lerp(this.viewport.width, this.distance * Math.tan(this.fieldOfView), this.scaleSpeed);\r\n\t\tthis.viewport.height = lerp(this.viewport.height, this.viewport.width / this.aspectRatio, this.scaleSpeed);\r\n\t\tthis.viewport.left = this.movement.x - (this.viewport.width / 2);\r\n\t\tthis.viewport.top = this.movement.y - (this.viewport.height / 2);\r\n\t\tthis.viewport.right = this.viewport.left + this.viewport.width;\r\n\t\tthis.viewport.bottom = this.viewport.top + this.viewport.height;\r\n\t\tthis.viewport.scale[0] = this.context.canvas.width / this.viewport.width;\r\n\t\tthis.viewport.scale[1] = this.context.canvas.height / this.viewport.height;\r\n\t}\r\n\r\n\tzoomTo(z) {\r\n\t\tthis.distance = lerp(this.distance, z, this.zoomSpeed);\r\n\t\tthis.updateViewport();\r\n\t}\r\n\r\n\tmoveTo(x, y) {\r\n\t\tthis.movement.x = lerp(this.movement.x, x, this.moveSpeed);\r\n\t\tthis.movement.y = lerp(this.movement.y, y, this.moveSpeed);\r\n\t\tthis.updateViewport();\r\n\t}\r\n\r\n\tsees(x, y, offsetX, offsetY) {\r\n\t\toffsetX = offsetX || 0;\r\n\t\toffsetY = offsetY || 0;\r\n\t\treturn this.viewport.top < y + offsetY && this.viewport.right > x  - offsetX && this.viewport.bottom > y - offsetY && this.viewport.left < x + offsetX;\r\n\t}\r\n\r\n\tscreenToWorld(x, y, obj) {\r\n\t\tobj = obj || {\r\n\t\t\tx: (x / this.viewport.scale[0]) + this.viewport.left,\r\n\t\t\ty: (y / this.viewport.scale[1]) + this.viewport.top\r\n\t\t};\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tworldToScreen(x, y, obj) {\r\n\t\tobj = obj || {\r\n\t\t\tx: (x - this.viewport.left) * (this.viewport.scale[0]),\r\n\t\t\ty: (y - this.viewport.top) * (this.viewport.scale[1])\r\n\t\t};\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcreate: function (context, options) {\r\n\t\treturn new Camera2D(context, options)\r\n\t}\r\n};\n\n//# sourceURL=webpack:///./src/client/lib/camera.js?')},"./src/client/lib/engine.js":function(module,exports,__webpack_require__){eval('const Stats = __webpack_require__(/*! stats.js */ "./node_modules/stats.js/build/stats.min.js");\r\nclass Engine {\r\n\tconstructor() {\r\n\t\tthis.frameRate = 0;\r\n\t\tthis.frameCount = 0;\r\n\t\tthis._targetFrameRate = 60;\r\n\t\tthis.stats = new Stats();\r\n\t\tthis.stats.showPanel(0);\r\n\t\tdocument.body.appendChild(this.stats.dom);\r\n\t}\r\n\r\n\trun(f) {\r\n\t\tlet startTime = performance.now();\r\n\t\tlet lastRun = performance.now();\r\n\t\tlet delta;\r\n\t\tlet engine = this;\r\n\t\t(function animate() {\r\n\t\t\tengine.stats.begin();\r\n\t\t\t/*delta = (performance.now() - startTime) / 1000;\r\n\t\t\tengine.frameRate = 1 / delta;\r\n\t\t\tstartTime = performance.now();\r\n\t\t\tengine.frameCount++;*/\r\n\t\t\tif (typeof f == "function") f();\r\n\r\n\t\t\tengine.stats.end();\r\n\t\t\trequestAnimationFrame(animate);\r\n\t\t})();\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcreate: function() {\r\n\t\treturn new Engine();\r\n\t}\r\n};\n\n//# sourceURL=webpack:///./src/client/lib/engine.js?')},"./src/client/lib/ray.js":function(module,exports){eval("function getIntersection(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n\tconst tn = (x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4);\r\n\tconst td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\tconst t = tn / td;\r\n\r\n\tconst un = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\r\n\tconst ud = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\tconst u = un / ud;\r\n\tif (t > 0 && u > 0 && u < 1) {\r\n\t\treturn {\r\n\t\t\tx: x1 + t * (x2 - x1),\r\n\t\t\ty: y1 + t * (y2 - y1),\r\n\t\t\tt: t\r\n\t\t};\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction dist(x1, y1, x2, y2) {\r\n\treturn Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n}\r\n\r\nclass Ray {\r\n\tconstructor() {\r\n\t\tthis.position = {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tthis.barriers = [];\r\n\t\tthis.casts = [];\r\n\t}\r\n\r\n\taddBarrier(x1, y1, x2, y2) {\r\n\t\tthis.barriers.push({\r\n\t\t\tpointA: {\r\n\t\t\t\tx: x1,\r\n\t\t\t\ty: y1\r\n\t\t\t},\r\n\t\t\tpointB: {\r\n\t\t\t\tx: x2,\r\n\t\t\t\ty: y2\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcast() {\r\n\t\tthis.casts = [];\r\n\r\n\t\tfor (var i = 0; i < this.barriers.length; i++) {\r\n\t\t\tlet barrier = this.barriers[i];\r\n\t\t\tlet offset = 0.000001;\r\n\r\n\t\t\tlet angle = Math.atan2(barrier.pointA.y - this.position.y, barrier.pointA.x - this.position.x) - offset;\r\n\t\t\tthis.casts.push({\r\n\t\t\t\tx: this.position.x + Math.cos(angle),\r\n\t\t\t\ty: this.position.y + Math.sin(angle),\r\n\t\t\t\tangle: angle\r\n\t\t\t});\r\n\r\n\t\t\tangle = Math.atan2(barrier.pointA.y - this.position.y, barrier.pointA.x - this.position.x) + offset;\r\n\t\t\tthis.casts.push({\r\n\t\t\t\tx: this.position.x + Math.cos(angle),\r\n\t\t\t\ty: this.position.y + Math.sin(angle),\r\n\t\t\t\tangle: angle\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.casts.length; i++) {\r\n\t\t\tlet cast = this.casts[i];\r\n\t\t\tlet nearestIntersection;\r\n\t\t\tlet t = Number.MAX_SAFE_INTEGER;\r\n\t\t\tfor (var j = 0; j < this.barriers.length; j++) {\r\n\t\t\t\tlet barrier = this.barriers[j];\r\n\t\t\t\tlet intersection = getIntersection(this.position.x, this.position.y, cast.x, cast.y, barrier.pointA.x, barrier.pointA.y, barrier.pointB.x, barrier.pointB.y);\r\n\t\t\t\tif (intersection) {\r\n\t\t\t\t\tif (intersection.t < t) {\r\n\t\t\t\t\t\tt = intersection.t;\r\n\t\t\t\t\t\tnearestIntersection = intersection;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (nearestIntersection) {\r\n\t\t\t\tcast.x = nearestIntersection.x;\r\n\t\t\t\tcast.y = nearestIntersection.y;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetShape() {\r\n\t\tconst vertices = [];\r\n\t\tthis.casts.sort((a, b) => a.angle - b.angle);\r\n\t\tfor (var i = 0; i < this.casts.length; i++) {\r\n\t\t\tlet cast = this.casts[i];\r\n\t\t\tvertices.push({\r\n\t\t\t\tx: cast.x,\r\n\t\t\t\ty: cast.y\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn vertices;\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tcreate: function() {\r\n\t\treturn new Ray;\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/client/lib/ray.js?")},"./src/client/lib/renderer.js":function(module,exports,__webpack_require__){eval('const camera = __webpack_require__(/*! ./camera.js */ "./src/client/lib/camera.js");\r\nconst engine = __webpack_require__(/*! ./engine.js */ "./src/client/lib/engine.js");\r\n\r\nclass Renderer {\r\n\tconstructor() {\r\n\t\tthis.canvas = document.getElementById("gameCanvas");\r\n\t\tthis.width = this.canvas.width;\r\n\t\tthis.height = this.canvas.height;\r\n\t\tthis.context = this.canvas.getContext("2d");\r\n\t\tthis.camera = camera.create(this.context);\r\n\t\tthis.engine = engine.create();\r\n\t\tthis.offscreen = 0;\r\n\t\tthis.context.offscreens = [];\r\n\t\tthis._customOptions = ["fill", "stroke", "align", "close", "curve"];\r\n\t\tthis._currentContext = this.context;\r\n\t}\r\n\r\n\trender(f) {\r\n\t\tif (typeof f !== "function") return;\r\n\r\n\t\tthis.engine.run(() => {\r\n\t\t\tthis.clear();\r\n\t\t\tf();\r\n\r\n\t\t\tif (!this.context.offscreens.length) return;\r\n\t\t\t//this.drawOffscreens();\r\n\t\t});\r\n\t}\r\n\r\n\tgetFrameCount() {\r\n\t\treturn this.engine.frameCount;\r\n\t}\r\n\r\n\tgetFrameRate() {\r\n\t\treturn this.engine.frameRate;\r\n\t}\r\n\r\n\tsetSize(width, height) {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.canvas.width = this.width;\r\n\t\tthis.canvas.height = this.height;\r\n\r\n\t\tfor (let context of this.context.offscreens) {\r\n\t\t\tcontext.canvas.width = this.canvas.width;\r\n\t\t\tcontext.canvas.height = this.canvas.height;\r\n\t\t}\r\n\t}\r\n\r\n\tfullscreen() {\r\n\t\tthis.setSize(innerWidth, innerHeight);\r\n\t\taddEventListener("resize", () => {\r\n\t\t\tthis.canvas.width = innerWidth\r\n\t\t\tthis.setSize(innerWidth, innerHeight);\r\n\t\t});\r\n\t}\r\n\r\n\tcreateLayer() {\r\n\t\tlet canvas = document.createElement("canvas");\r\n\t\tcanvas.width = this.canvas.width;\r\n\t\tcanvas.height = this.canvas.height;\r\n\t\tlet context = canvas.getContext("2d");\r\n\t\tlet data = {\r\n\t\t\tcamera: this.camera\r\n\t\t};\r\n\t\tcontext.rendererData = data;\r\n\t\tthis.context.offscreens.push(context);\r\n\t\treturn context;\r\n\t}\r\n\r\n\tdrawOffscreens() {\r\n\t\tfor (var i = 0; i < this.context.offscreens.length; i++) {\r\n\t\t\tlet context = this.context.offscreens[i]\r\n\t\t\tcontext.rendererData.camera.begin(() => {\r\n\t\t\t\tthis.context.drawImage(context.canvas, 0, 0, context.canvas.width, context.canvas.height);\r\n\t\t\t})\r\n\r\n\t\t\tcontext.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n\t\t}\r\n\t}\r\n\r\n\tcircle(x, y, radius, options, context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tctx.beginPath();\r\n\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\tthis._hasProperty(options, "close", () => {\r\n\t\t\tctx.closePath();\r\n\t\t});\r\n\r\n\t\tthis._evaluateOptions(options, ctx);\r\n\t}\r\n\r\n\trect(x, y, width, height, options, context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tthis._hasProperty(options, "align", opt => {\r\n\t\t\tlet alignment = opt.split(" ");\r\n\r\n\t\t\tif (alignment[0]) {\r\n\t\t\t\tif (alignment[0] == "center" || alignment[0] == "middle") {\r\n\t\t\t\t\tx -= width * 0.5;\r\n\t\t\t\t} else if (alignment[0] == "right") {\r\n\t\t\t\t\tx -= width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (alignment[1]) {\r\n\t\t\t\tif (alignment[1] == "center" || alignment[0] == "middle") {\r\n\t\t\t\t\ty -= height * 0.5;\r\n\t\t\t\t} else if (alignment[1] == "bottom") {\r\n\t\t\t\t\ty -= height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.rect(x, y, width, height);\r\n\r\n\t\tthis._hasProperty(options, "close", () => {\r\n\t\t\tctx.closePath();\r\n\t\t});\r\n\r\n\t\tthis._evaluateOptions(options, ctx);\r\n\t}\r\n\r\n\tfromVertices(vertices, options, context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tif (!vertices.length) return;\r\n\r\n\t\tctx.beginPath();\r\n\r\n\t\tif (!this._hasProperty(options, "curve")) {\r\n\t\t\tctx.moveTo(vertices[0].x, vertices[0].y);\r\n\t\t\tfor (var i = 0; i < vertices.length; i++) {\r\n\t\t\t\tlet vertex = vertices[i];\r\n\t\t\t\tctx.lineTo(vertex.x, vertex.y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._hasProperty(options, "curve", () => {\r\n\t\t\tctx.beginPath();\r\n\t\t\tlet first = vertices[0];\r\n\t\t\tlet next = vertices[1];\r\n\t\t\tlet mx = (first.x + next.x) * 0.5;\r\n\t\t\tlet my = (first.y + next.y) * 0.5;\r\n\t\t\tctx.moveTo(mx, my);\r\n\t\t\tfor (var i = 1; i < vertices.length; i++) {\r\n\t\t\t\tlet current = vertices[i];\r\n\t\t\t\tlet next = vertices[i + 1 == vertices.length ? 0 : i + 1];\r\n\t\t\t\tlet mx = (next.x + current.x) * 0.5;\r\n\t\t\t\tlet my = (next.y + current.y) * 0.5;\r\n\t\t\t\tctx.quadraticCurveTo(current.x, current.y, mx, my);\r\n\t\t\t}\r\n\t\t\tctx.quadraticCurveTo(first.x, first.y, mx, my);\r\n\t\t\tctx.lineJoin = "round";\r\n\t\t});\r\n\r\n\t\tthis._hasProperty(options, "close", () => {\r\n\t\t\tctx.closePath();\r\n\t\t});\r\n\r\n\t\tthis._evaluateOptions(options, ctx);\r\n\t}\r\n\r\n\ttext(text, x, y, options, context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tthis._hasProperty(options, "align", opt => {\r\n\t\t\tlet alignment = opt.split(" ");\r\n\r\n\t\t\tif (alignment[0]) {\r\n\t\t\t\tif (alignment[0] == "left") {\r\n\t\t\t\t\tctx.textAlign = "start";\r\n\t\t\t\t} else if (alignment[0] == "center" || alignment[0] == "middle") {\r\n\t\t\t\t\tctx.textAlign = "center";\r\n\t\t\t\t} else if (alignment[0] == "right") {\r\n\t\t\t\t\tctx.textAlign = "right";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (alignment[1]) {\r\n\t\t\t\tif (alignment[1] == "top") {\r\n\t\t\t\t\tctx.textBaseline = "start";\r\n\t\t\t\t} else if (alignment[1] == "center" || alignment[0] == "middle") {\r\n\t\t\t\t\tctx.textBaseline = "middle";\r\n\t\t\t\t} else if (alignment[1] == "bottom") {\r\n\t\t\t\t\tctx.textBaseline = "bottom";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tctx.beginPath();\r\n\t\tthis._evaluateOptions(options, ctx);\r\n\t\tthis._hasProperty(options, "stroke", () => {\r\n\t\t\tctx.strokeText(text, x, y);\r\n\t\t});\r\n\r\n\t\tthis._hasProperty(options, "fill", () => {\r\n\t\t\tctx.fillText(text, x, y);\r\n\t\t});\r\n\r\n\t\tthis._hasProperty(options, "close", () => {\r\n\t\t\tctx.closePath();\r\n\t\t});\r\n\t}\r\n\r\n\tclear(context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tctx.clearRect(0, 0, this.width, this.height);\r\n\t}\r\n\r\n\tsave(context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tctx.save();\r\n\t}\r\n\r\n\trestore(context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\tclip(context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tctx.clip();\r\n\t}\r\n\r\n\tfill(color, context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.fill();\r\n\t}\r\n\r\n\tstroke(color, context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tctx.strokeStyle = color;\r\n\t\tctx.stroke();\r\n\t}\r\n\r\n\t_evaluateOptions(options, context) {\r\n\t\tlet ctx = context || this.context;\r\n\t\tif (!options) return;\r\n\r\n\t\tlet keys = Object.keys(options);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tlet key = keys[i];\r\n\t\t\tif (key == "stroke") ctx.strokeStyle = options[key];\r\n\t\t\tif (key == "fill") ctx.fillStyle = options[key];\r\n\t\t\tif (this._customOptions.includes(key)) continue;\r\n\t\t\tctx[key] = options[key];\r\n\t\t}\r\n\r\n\t\tif (options.stroke) this.stroke(options.stroke, ctx);\r\n\t\tif (options.fill) this.fill(options.fill, ctx);\r\n\t}\r\n\r\n\t_hasProperty(options, name, callback) {\r\n\t\tif (options) {\r\n\t\t\tif (!options[name]) return false;\r\n\t\t\tif (typeof callback == "function") callback(options[name]);\r\n\t\t\treturn options[name];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst renderer = new Renderer();\r\n\r\nmodule.exports = renderer;\n\n//# sourceURL=webpack:///./src/client/lib/renderer.js?')}});