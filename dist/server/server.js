"use strict";var express=require("express"),socket=require("socket.io"),app=express(),port=process.env.PORT||3e3,server=app.listen(port,function(){console.log("Listening on port ".concat(port))}),io=socket(server);app.use(express.static(__dirname+"/../client"));var database=require("./database.js"),game=require("./classes/game.js");function toggleOffline(e,n){database.in("users").update({_id:e},{$set:{offline:n}})}io.on("connection",function(o){console.log("".concat(o.id," has connected.")),o.on("client:register",function(e,n){database.in("users").insert({username:e,codename:"",password:n,offline:!0,friends:[],level:1,experience:0,currency:1e3,inventory:{guns:[],wardrobe:{heads:[],bodies:[]}},registrationDate:Date.now()})}),o.on("client:login",function(i){database.in("users").find({_id:i},function(e,n){n.length&&(n=n[0],n={id:i,codename:n.codename,inventory:n.inventory,currency:n.currency,level:n.level,experience:n.experience,friends:n.friends,offline:!1},o.emit("client:load",n),toggleOffline(i,!1))})}),o.on("client:register:validate",function(i,t){database.in("users").find({username:i},function(e,n){n.length?o.emit("client:register:error","duplicate"):o.emit("client:register:success",i,t)})}),o.on("client:login:validate",function(e,i){database.in("users").find({username:e},function(e,n){n.length?n[0].password!==i?o.emit("client:login:error","incorrect"):o.emit("client:login:success",n[0]._id):o.emit("client:login:error","unknown")})}),o.on("client:create:room",function(e,n){game.createRoom(n)}),o.on("client:join",function(e,n){}),o.on("client:leave",function(e,n){})});