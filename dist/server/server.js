"use strict";function _createForOfIteratorHelper(e,o){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||o&&e&&"number"==typeof e.length){n&&(e=n);var t=0,o=function(){};return{s:o,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,i=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){a=!0,r=e},f:function(){try{i||null==n.return||n.return()}finally{if(a)throw r}}}}function _unsupportedIterableToArray(e,o){if(e){if("string"==typeof e)return _arrayLikeToArray(e,o);var n=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(n="Object"===n&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,o):void 0}}function _arrayLikeToArray(e,o){(null==o||o>e.length)&&(o=e.length);for(var n=0,t=new Array(o);n<o;n++)t[n]=e[n];return t}var express=require("express"),socket=require("socket.io"),app=express(),port=process.env.PORT||3e3,server=app.listen(port,function(){console.log("Listening on port ".concat(port))}),io=socket(server);app.use(express.static(__dirname+"/../client"));var database=require("./database.js"),config=require("../../lib/config.js"),game=require("./classes/game.js"),eventLogs=!0;function toggleOffline(e,o){database.in("users").update({_id:e},{$set:{offline:o}})}function parseRoom(e,o){var n={id:e.id,index:e.index,description:e.description,password:e.password,maxWave:e.maxWave,currentWave:e.currentWave,size:e.size,wallWidth:e.wallWidth,background:e.background,playerCount:e.players.length};if((o=o||{}).players||o.objects){for(var t=[],r=0;r<e.players.length;r++){var i=e.players[r];t.push({id:i.id,mouse:i.mouse,position:i.position,radius:i.radius,angle:i.angle})}n.players=t}if(o.zombies||o.objects){for(var a=[],r=0;r<e.zombies.length;r++){var s=e.zombies[r];a.push({id:s.id,position:s.position,radius:s.radius,angle:s.angle})}n.zombies=a}if(o.bullets||o.objects){for(var l=[],r=0;r<e.bullets.length;r++){var c=e.bullets[r];l.push({id:c.id,playerId:c.playerId,position:c.position,radius:c.radius,angle:c.angle})}n.bullets=l}if(o.barriers||o.objects){for(var d=[],r=0;r<e.barriers.length;r++){var u=e.barriers[r];d.push({id:u.id,position:u.position,width:u.width,height:u.height,angle:u.angle,vertices:u.vertices})}n.barriers=d}return n}function updateLobbyRooms(){for(var e=0;e<game.rooms.length;e++){var o=game.rooms[e];io.emit("client:lobby:room:update",parseRoom(o,{players:!0}))}}function updateClient(){for(var e=0;e<game.rooms.length;e++){var o=game.rooms[e];io.in(o.id).emit("client:room:update",parseRoom(o,{objects:!0}))}}function updateGame(){for(var e=0;e<game.rooms.length;e++)game.rooms[e].update()}io.on("connection",function(r){eventLogs&&console.log("".concat(r.id," has connected")),r.on("disconnect",function(){eventLogs&&console.log("".concat(r.id," has disconnected")),game.removePlayer(r.id),updateLobbyRooms();var e,o=_createForOfIteratorHelper(game.rooms);try{for(o.s();!(e=o.n()).done;){var n=e.value;n.players.length||(game.removeRoom(n.id),io.emit("room:delete",n.id))}}catch(e){o.e(e)}finally{o.f()}}),r.on("client:codename:validate",function(n){database.in("users").find({codename:n},function(e,o){o.length?r.emit("client:codename:error","duplicate"):r.emit("client:codename:success",n)})}),r.on("client:codename",function(e,o){database.in("users").update({_id:e},{$set:{codename:o}})}),r.on("client:message:lobby",function(e,o){eventLogs&&console.log("".concat(e," sent ").concat(o)),io.emit("message:lobby",e,o)}),r.on("client:register",function(e,o){eventLogs&&console.log("".concat(e," has registered")),database.in("users").insert({username:e,codename:"",password:o,offline:!0,friends:[],level:1,experience:0,currency:1e3,inventory:{guns:[],wardrobe:{heads:[],bodies:[]}},registrationDate:Date.now()})}),r.on("client:logout",function(e){eventLogs&&console.log("".concat(e," has logged out")),toggleOffline(e,!0)}),r.on("client:login",function(n){eventLogs&&console.log("".concat(n," has logged in")),database.in("users").find({_id:n},function(e,o){o.length&&(o=o[0],o={id:n,codename:o.codename,inventory:o.inventory,currency:o.currency,level:o.level,experience:o.experience,friends:o.friends,offline:!1},r.emit("client:load",o),updateLobbyRooms(),toggleOffline(n,!1))})}),r.on("client:register:validate",function(n,t){eventLogs&&console.log("".concat(n," tried to register")),database.in("users").find({username:n},function(e,o){o.length?r.emit("client:register:error","duplicate"):r.emit("client:register:success",n,t)})}),r.on("client:login:validate",function(e,n){eventLogs&&console.log("".concat(e," tried to login")),database.in("users").find({username:e},function(e,o){o.length?o[0].password!==n?r.emit("client:login:error","incorrect"):r.emit("client:login:success",o[0]._id):r.emit("client:login:error","unknown")})}),r.on("client:room:join",function(e){var o=game.getRoom(e),n=o.addPlayer(r.id);r.join(e);var t=parseRoom(o,{players:!0}),e=t.players.find(function(e){return e.id===n.id});r.emit("client:room:enter",t),io.in(o.id).emit("client:player:add",e),updateLobbyRooms()}),r.on("client:room:leave",function(e){e=game.getRoom(e);e?e.removePlayer(r.id):eventLogs&&console.log("Removing a player has failed")}),r.on("client:create:room",function(e,o,n){n=game.createRoom({description:e,maxWave:o,password:n});r.emit("client:join",n.id),updateLobbyRooms()}),r.on("client:game:mouse",function(e,o,n){e=game.getRoom(e);!e||(e=e.getPlayer(r.id))&&e.setMouse(o,n)}),r.on("client:game:move:up",function(e){e=game.getRoom(e);!e||(e=e.getPlayer(r.id))&&e.moveUp()}),r.on("client:game:move:right",function(e){e=game.getRoom(e);!e||(e=e.getPlayer(r.id))&&e.moveRight()}),r.on("client:game:move:down",function(e){e=game.getRoom(e);!e||(e=e.getPlayer(r.id))&&e.moveDown()}),r.on("client:game:move:left",function(e){e=game.getRoom(e);!e||(e=e.getPlayer(r.id))&&e.moveLeft()}),r.on("client:game:position",function(e,o,n){e=game.getRoom(e);!e||(e=e.getPlayer(r.id))&&e.position.set(o,n)}),r.on("client:game:shoot",function(e){var o=game.getRoom(e);!o||(e=o.getPlayer(r.id))&&e.shoot(o)})}),setInterval(updateClient,1e3/30),setInterval(updateGame,1e3/30);